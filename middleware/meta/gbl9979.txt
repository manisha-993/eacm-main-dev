@name=GBL9979
@noremote=true
@type=basic
@dbase=opicmods
@narrative
-----------------------------------------------------------------------------------------
-- This guy will kick back the next available ID for the given enterprise
-- in the result set
-- If no record exists .. we will create a new record in the NEXTRECID Table and
-- Return a 1 while seeding the table with 2
-----------------------------------------------------------------------------------------
$Log: gbl9979.txt,v $
Revision 1.7  2010/06/21 15:43:06  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.6  2009/10/20 00:22:02  rick
update to change long datatype to sqlint32

Revision 1.5  2004/12/02 18:07:20  gregg
more

Revision 1.4  2004/12/02 18:02:31  gregg
more fix

Revision 1.3  2004/12/02 17:54:12  gregg
fix

Revision 1.2  2004/12/02 17:49:31  gregg
schema is GBLI

Revision 1.1  2004/12/01 21:47:01  gregg
initial load


@desc=Get NextRecID for the given Enterprise
@results=1
@parmstyle=GENERAL
@sql

EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl9979.txt,v 1.7 2010/06/21 15:43:06 wendy Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL BEGIN DECLARE SECTION;

sqlint32 EntityID;

EXEC SQL END DECLARE SECTION;

EXEC SQL DECLARE sp_cursor CURSOR FOR
SELECT DISTINCT
:EntityID AS EntityID
FROM SYSCAT.SCHEMAAUTH
;

@execute


EXEC SQL BEGIN DECLARE SECTION;
sqlint32 NewEntityID = 0;
EXEC SQL END DECLARE SECTION;

EXEC SQL DECLARE C1 CURSOR FOR
SELECT NextRecID FROM GBLI.NEXTRECID WHERE Enterprise = :Enterprise FOR UPDATE OF NEXTRECID;
EXEC SQL OPEN C1;
EXEC SQL FETCH C1 INTO :NewEntityID ;
if (NewEntityID > 0) {
    EXEC SQL UPDATE GBLI.NEXTRECID SET NextRecID = :NewEntityID + 1 WHERE CURRENT OF C1;
    EXEC SQL CLOSE C1 WITH RELEASE;
    EntityID = NewEntityID;
}else {
    // If no value exists, "prime the pump" with ID = 1
    EXEC SQL CLOSE C1 WITH RELEASE;
    EntityID = 1;
    EXEC SQL INSERT INTO GBLI.NEXTRECID (Enterprise, NextRecID) Values (:Enterprise, 2);    
}

EXEC SQL COMMIT WORK;

EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
@end




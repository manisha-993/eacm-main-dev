@name=GBL2962
@noremote=true
@type=basic
@dbase=opicmpdh
@addperm=true
@narrative
---------------------------------------------------------------------------------------------
--  This replaces WHY2962
---------------------------------------------------------------------------------------------
$Log: gbl2962.txt,v $
Revision 1.19  2010/06/21 15:42:47  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.18  2004/10/20 21:01:41  dave
changes to gen parm

Revision 1.17  2004/02/20 20:21:50  roger
Must be @t_schema

Revision 1.16  2004/02/20 18:09:31  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.15  2003/11/25 19:01:38  gregg
grab parents of relators too

Revision 1.14  2003/04/30 22:30:12  gregg
revamped to only grab MLA linktype info

Revision 1.13  2003/04/28 21:10:01  dave
more Entity/Role removal logic

Revision 1.12  2002/12/05 18:44:15  gregg
get entityClass from MLA

Revision 1.11  2002/10/03 21:02:37  vlasta
*** empty log message ***

Revision 1.10  2001/10/17 17:01:25  minhthy
CHANGED ALL NLSID = 1

Revision 1.9  2001/10/17 16:40:39  minhthy
CHANGED LT1.NLSID = LT2.NLSID = 1

Revision 1.8  2001/10/15 16:32:23  minhthy
ADDED LT1 AND LT2 = :NLSID

Revision 1.7  2001/07/21 04:02:13  roger
Change MetaLinkAttribute to MetaLinkAttr
Change "opicm" to @t_schema in some

Revision 1.6  2001/06/07 20:49:43  minhthy
fixed sql statement

Revision 1.5  2001/06/05 21:09:48  gregg
Description Should be Meta Get Parent, not Meta Get Children.

Revision 1.4  2001/03/16 18:27:54  roger
Added branding feature to stored procedures

Revision 1.3  2001/03/16 03:38:59  roger
Added Log keyword

@desc=Meta Get Parent
@fenced=true
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl2962.txt,v 1.19 2010/06/21 15:42:47 wendy Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE sp_cursor CURSOR FOR
SELECT
 MLA.linktype
,MLA.linktype1
from @t_schema.metalinkattr MLA 
where
    MLA.enterprise = :Enterprise
AND MLA.linkcode = 'Relator'
AND (MLA.linktype2 = :LinkType2 OR MLA.linktype = :LinkType2)
AND MLA.ValFrom <= :ValOn AND :ValOn < MLA.ValTo AND MLA.EffFrom <= :EffOn AND :EffOn < MLA.EffTo
;
@execute
EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in LinkType2 varchar(32)
in OPENID int
in NLSID int
in ValOn varchar(26)
in EffOn varchar(26)
@end



@name=GBL2015
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative
----------------------------------------------------------------
-- Answers the question:
--   Is the specified Entity locked and if so, when and by whom?
--   V2.3 Only look in the 'now' for current user information
--   Added RoleCode information as part of the return
----------------------------------------------------------------
$Log: gbl2015.txt,v $
Revision 1.22  2010/06/21 15:42:45  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.21  2004/10/20 21:01:38  dave
changes to gen parm

Revision 1.20  2004/02/20 20:21:47  roger
Must be @t_schema

Revision 1.19  2004/02/20 18:09:28  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.18  2003/12/11 22:56:56  joan
change from inner join to left join b/c OPWG might be expired

Revision 1.17  2003/09/08 16:31:10  roger
Enterprise was changed to 16 char length

Revision 1.16  2002/12/16 20:51:24  joan
work on softlock

Revision 1.15  2002/12/13 21:30:51  joan
fix bugs

Revision 1.14  2002/12/13 20:41:00  joan
fix for addition column in Softlock table

Revision 1.13  2002/11/19 23:26:54  joan
fix hasLock method

Revision 1.12  2002/11/18 22:03:23  joan
fixing softlock

Revision 1.11  2002/09/13 18:02:42  joan
change attributecode NAME to USERNAME

Revision 1.10  2002/04/08 23:30:23  joan
working on OPWG

Revision 1.9  2001/10/12 18:07:35  dave
fix to 2015..

Revision 1.8  2001/09/18 16:13:11  dave
misc clean up

Revision 1.7  2001/05/04 01:56:45  dave
fix for softlock role description

Revision 1.6  2001/05/04 01:19:11  dave
expanded role description

Revision 1.5  2001/05/03 23:48:18  dave
perisitent lock changes

Revision 1.4  2001/04/10 04:28:15  dave
First Pass at adding persistence to the create softlock process

Revision 1.3  2001/03/16 18:27:49  roger
Added branding feature to stored procedures

Revision 1.2  2001/03/16 03:38:54  roger
Added Log keyword

@desc=Get Soft Lock info- who, when -passing ET, EID
@fenced=true
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl2015.txt,v 1.22 2010/06/21 15:42:45 wendy Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE sp_cursor CURSOR FOR
SELECT
 :EntityType AS EntityType
,:EntityID AS EntityID
, COALESCE(RTRIM(T.AttributeValue), 'Unknown') AS AgentName
, COALESCE (RTRIM(MD.LongDescription),'No Role Description') || '(' || COALESCE(RTRIM(T1.AttributeValue), 'Unknown Role') || ')' AS RoleCode
, S.LockedOn
, S.OPWGID
, S.LOCKLEVEL
, COALESCE(RTRIM(T2.AttributeValue),'No Display Name Found') As DisplayName
, S.LOCKENTITYTYPE
, S.LOCKENTITYID
, S.LOCKOWNER
, COALESCE(RTRIM(MD2.LongDescription),'N/A') As LockOwnerDesc
FROM @t_schema.Softlock S
LEFT JOIN @t_schema.Relator R ON
    R.Enterprise = :Enterprise
AND R.EntityType = 'OPWG'
AND R.EntityID = S.OPWGID
AND R.ValFrom <= :now AND :now < R.ValTo AND R.EffFrom <= :now AND :now < R.EffTo
LEFT JOIN @t_schema.Text T ON
    T.Enterprise = R.Enterprise
AND T.EntityType = R.Entity2Type
AND T.EntityID = R.Entity2ID
AND T.AttributeCode = 'USERNAME'
AND T.NLSID = 1
AND T.ValFrom <= :now AND :now < T.ValTo AND T.EffFrom <= :now AND :now < T.EffTo
LEFT JOIN @t_schema.Text T1 ON
    T1.Enterprise = R.Enterprise
AND T1.EntityType = R.EntityType
AND T1.EntityID = R.EntityID
AND T1.AttributeCode = 'ROLECODE'
AND T1.NLSID = 1
AND T1.ValFrom <= :now AND :now < T1.ValTo AND T1.EffFrom <= :now AND :now < T1.EffTo
LEFT JOIN @t_schema.MetaDescription MD ON
    MD.Enterprise = :Enterprise
AND MD.DescriptionType = RTRIM(T1.AttributeValue)
AND MD.DescriptionClass = 'Role'
AND MD.ValFrom <= :now AND :now < MD.ValTo AND MD.EffFrom <= :now AND :now < MD.EffTo
LEFT JOIN @t_schema.Text T2 ON
    T2.Enterprise = :Enterprise
AND T2.EntityType = :EntityType
AND T2.EntityID = :EntityID
AND T2.AttributeCode = 'NAME'
AND T2.NLSID = 1
AND T2.ValFrom <= :now AND :now < T2.ValTo AND T2.EffFrom <= :now AND :now < T2.EffTo
LEFT JOIN @t_schema.MetaDescription MD2 ON
    MD2.Enterprise = :Enterprise
AND MD2.DescriptionType = S.LOCKOWNER
AND MD2.ValFrom <= :now AND :now < MD2.ValTo AND MD2.EffFrom <= :now AND :now < MD2.EffTo
WHERE
    S.Enterprise = :Enterprise
AND S.EntityType = :EntityType
AND S.EntityID = :EntityID
;
@execute
EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in EntityType varchar(32)
in EntityID int
@end



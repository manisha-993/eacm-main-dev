@name=GBL7009
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative
--------------------------------------------------------------------------------------------------
-- This guy will be soley responsible for returning all the Navigation Attributes for
-- a given entitytype,id column in the trsNavigate table
--------------------------------------------------------------------------------------------------
$Log: gbl7009.txt,v $
Revision 1.3  2010/06/21 15:42:50  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.2  2004/10/20 21:01:43  dave
changes to gen parm

Revision 1.1  2004/06/21 15:02:35  joan
add ABRStatus action


@desc=Get Navigation + ABR Attributes for a given trsNavigateColumn
@fenced=true
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;

char brand[80] = "$Id: gbl7009.txt,v 1.3 2010/06/21 15:42:50 wendy Exp $";
EXEC SQL END DECLARE SECTION;

EXEC SQL DECLARE sp_cursor1 CURSOR FOR
WITH myEntities (EntityID, EntityType) AS
(SELECT DISTINCT Entity1ID, Entity1Type from @t_schema.trsNavigate WHERE SESSIONID = :SessionID
UNION
SELECT DISTINCT Entity2ID, Entity2Type from @t_schema.trsNavigate WHERE SESSIONID = :SessionID
UNION
SELECT DISTINCT EntityID, EntityType from @t_schema.trsNavigate WHERE SESSIONID = :SessionID
)
 SELECT 
 RTRIM(T.EntityType)  as EntityType
,T.EntityID  as EntityID
,RTRIM(T.AttributeCode) as AttributeCode
,T.NLSID as NLSID
,RTRIM(T.AttributeValue) as AttributeValue
,T.EffFrom as EffFrom
,T.EffTo as EffTo
FROM myEntities N
INNER JOIN @t_schema.Text T ON
    T.Enterprise = :Enterprise
AND T.EntityType = N.EntityType
AND T.EntityID = N.EntityID
AND T.NLSID in (1,:NLSID)
AND T.ValFrom <= :ValOn AND :ValOn <= T.ValTo AND T.EffFrom <= :EffOn AND :EffOn <= T.EffTo
LEFT JOIN @t_schema.MetaLinkAttr MLA ON
    MLA.Enterprise = :Enterprise
--AND MLA.LinkType = 'Entity/Attribute'
AND MLA.LinkType1 = T.EntityType
AND MLA.LinkType2 = T.AttributeCode
AND MLA.LinkCode = 'Navigate'
AND MLA.ValFrom <= :ValOn AND :ValOn < MLA.ValTo AND MLA.EffFrom <= :EffOn AND :EffOn < MLA.EffTo
WHERE
   MLA.Enterprise IS NOT NULL
UNION ALL
SELECT 
 RTRIM(F.EntityType)
,F.EntityID
,RTRIM(F.AttributeCode)
,1
,RTRIM(F.AttributeValue)
,F.EffFrom
,F.EffTo
FROM myEntities N
INNER JOIN @t_schema.Flag F ON
    F.Enterprise = :Enterprise
AND F.EntityType = N.EntityType
AND F.EntityID = N.EntityID
AND F.ValFrom <= :ValOn AND :ValOn <= F.ValTo AND F.EffFrom <= :EffOn AND :EffOn <= F.EffTo
INNER JOIN @t_schema.MetaLinkAttr MLA ON
      MLA.Enterprise = :Enterprise
--  AND MLA.LinkType = 'Entity/Attribute'
  AND MLA.LinkType1 = F.EntityType
  AND MLA.LinkType2 = F.AttributeCode
  AND MLA.LinkCode = 'Navigate'
  AND MLA.ValFrom <= :ValOn AND :ValOn < MLA.ValTo AND MLA.EffFrom <= :EffOn AND :EffOn < MLA.EffTo
UNION ALL
SELECT 
 RTRIM(F.EntityType)
,F.EntityID
,RTRIM(F.AttributeCode)
,1
,RTRIM(F.AttributeValue)
,F.EffFrom
,F.EffTo
FROM myEntities N
INNER JOIN @t_schema.Flag F ON
    F.Enterprise = :Enterprise
AND F.EntityType = N.EntityType
AND F.EntityID = N.EntityID
AND F.ValFrom <= :ValOn AND :ValOn <= F.ValTo AND F.EffFrom <= :EffOn AND :EffOn <= F.EffTo
INNER JOIN @t_schema.MetaEntity ME ON
      ME.Enterprise = :Enterprise
  AND ME.EntityType = F.AttributeCode
  AND ME.EntityClass IN ('A')
  AND ME.ValFrom <= :ValOn AND :ValOn < ME.ValTo AND ME.EffFrom <= :EffOn AND :EffOn < ME.EffTo
;

@execute

EXEC SQL OPEN sp_cursor1;

@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in SessionID int
in NLSID int
in ValOn varchar(26)
in EffOn varchar(26)
@end



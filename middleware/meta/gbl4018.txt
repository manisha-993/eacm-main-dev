@name=GBL4018
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative
--------------------------------------------------------------------------------------------
-- Retrive full prodstruct data here, based on FeatEntitytype/FeatEntityID, LOCEntitytype/LOCEntityID.
-- For a SPECIFIC NLSID (???)
--------------------------------------------------------------------------------------------
$Log: gbl4018.txt,v $
Revision 1.7  2010/06/21 15:42:40  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.6  2006/10/30 17:22:47  gregg
rem projcdnam

Revision 1.5  2006/10/26 20:02:48  gregg
projcdnam,projcdnam_fc

Revision 1.4  2006/09/28 18:21:29  gregg
adding configuratorflag_fc

Revision 1.3  2005/09/12 03:35:58  dave
fixing prodstruct code so we can start testing IDL

Revision 1.2  2005/05/25 17:59:24  gregg
compile fix

Revision 1.1  2005/05/25 17:08:29  gregg
initial load

Revision 1.1  2005/05/24 23:18:32  gregg
initial load


@desc=Retrieve Feature info from PRODSTRUCT table
@fenced=true
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl4018.txt,v 1.7 2010/06/21 15:42:40 wendy Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE sp_cursor CURSOR FOR
SELECT
  DISTINCT
   ENTERPRISE
,  COUNTRYCODE
,  LANGUAGECODE
,  NLSID
,  PRODENTITYTYPE
,  PRODENTITYID
,  FEATENTITYTYPE
,  FEATENTITYID
,  ORDERCODE
,  ORDERCODE_FC
,  OSLEVEL
,  OSLEVEL_FC
,  ANNDATE
,  WITHDRAWDATE
,  PUBFROMDATE
,  PUBTODATE
,  SYSTEMMAX
,  SYSTEMMIN
,  CONFQTY
,  STATUS
,  STATUS_FC
,  CONFIGURATORFLAG_FC
,  VALFROM
,  VALTO
,  ISACTIVE
FROM gbli.PRODSTRUCT 
WHERE
    Enterprise = :Enterprise
AND ProdEntityType = :ProdEntityType
AND ProdEntityID = :ProdEntityID
AND FeatEntityType = :FeatEntityType
AND FeatEntityID = :FeatEntityID
AND NLSID = :NLSID
;
@execute
EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in ProdEntityType varchar(32)
in ProdEntityID int
in FeatEntityType varchar(32)
in FeatEntityID int
in NLSID int
@end

@name=GBL2921
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative
$Log: gbl2921.txt,v $
Revision 1.22  2011/09/09 22:22:26  praveen
Filter allowed values by Role authority (XLATEADM)

Revision 1.21  2010/06/21 15:42:47  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.20  2004/10/20 21:01:39  dave
changes to gen parm

Revision 1.19  2004/02/20 20:21:49  roger
Must be @t_schema

Revision 1.18  2004/02/20 18:09:30  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.17  2003/08/18 18:35:24  dave
changed select line a bit

Revision 1.16  2003/08/18 18:29:42  dave
adding attributecode description to sp

Revision 1.15  2003/08/08 18:04:25  dave
o.k. Meta API Conv II

Revision 1.14  2003/08/07 17:03:31  dave
new classes to simplify POK code for Flag Translation

Revision 1.13  2003/08/06 19:49:48  dave
New meta flag value conversion

Revision 1.12  2001/12/17 17:56:16  dave
Removed A from the flag choices for this SP

Revision 1.11  2001/12/12 23:53:52  dave
fix for syntax

Revision 1.10  2001/12/12 17:24:43  dave
tweeks to sync 1.0 and 1.1 for all the maintenance mods

Revision 1.9  2001/12/11 23:42:10  dave
misc changes to support Translation

Revision 1.8  2001/05/07 23:43:12  vlasta
changed gbl2921 - added 'A'

Revision 1.7  2001/04/06 17:45:40  vlasta
changed gbl2922 (no more 'S')

Revision 1.6  2001/03/22 16:28:43  roger
Misc clean up

Revision 1.5  2001/03/22 01:04:15  roger
Misc clean up

Revision 1.4  2001/03/19 19:21:48  roger
MetaFlagValue rows moved to MetaDescription table

Revision 1.3  2001/03/16 18:27:52  roger
Added branding feature to stored procedures

Revision 1.2  2001/03/16 03:38:57  roger
Added Log keyword

@desc=Used for flag translation selection - all new NLSID 1 flag descriptions
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl2921.txt,v 1.22 2011/09/09 22:22:26 praveen Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE sp_cursor CURSOR FOR
select
 ME.EntityClass
,ME.EntityType
,MD2.LongDescription
,MD.DescriptionClass
,MD.ValFrom
,MD.LongDescription
From @t_schema.metaDescription MD
INNER JOIN @t_schema.MetaEntity ME ON
    ME.Enterprise = :Enterprise
AND ME.EntityType = MD.DescriptionType
AND ME.EntityClass IN ('F','U')
AND ME.ValTo = :forever
AND ME.EffTo >  :now
INNER JOIN @t_schema.MetaLinkAttr MLA ON
    MD.DescriptionType = MLA.LINKTYPE2
AND MLA.LINKTYPE='Role/Attribute'
AND MLA.LINKTYPE1='XLATEADM'
AND MLA.LINKVALUE='W'
AND MLA.ValTo = :forever
AND MLA.EffTo > :now
INNER JOIN @t_schema.MetaDescription MD2 ON
    MD2.Enterprise = :Enterprise
AND MD2.DescriptionType = ME.EntityType
AND MD2.DescriptionClass = ME.EntityClass
AND MD2.ValTo = :forever
AND MD2.EffTo > :now
LEFT JOIN @t_schema.MetaDescription MD1 ON
    MD1.Enterprise = :Enterprise
AND MD1.DescriptionType = MD.DescriptionType
AND MD1.DescriptionClass = MD.DescriptionClass
AND MD1.NLSID = :NLSID
AND MD1.ValFrom  > MD.Valfrom
AND MD1.ValTo = :forever
AND MD1.EffTo > :now
WHERE
  MD.Enterprise = :Enterprise
AND MD.NLSID = 1
AND MD.Valto = :forever
AND MD.EffTo > :now
AND MD.DescriptionClass NOT IN ('F','U','S','A')
AND MD1.Enterprise IS NULL
;
@execute
EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in NLSID int
@end



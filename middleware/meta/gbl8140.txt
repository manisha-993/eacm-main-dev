@name=GBL8140
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative
------------------------------------------------------------------------------------------------
-- This guy returns the characteristics of a given EntityType.
-- It returns Class, Description, and Capability (was 1040)
-------------------------------------------------------------------------------------------------
$Log: gbl8140.txt,v $
Revision 1.12  2010/06/21 15:43:16  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.11  2004/10/20 21:01:48  dave
changes to gen parm

Revision 1.10  2004/02/20 20:21:57  roger
Must be @t_schema

Revision 1.9  2004/02/20 18:09:37  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.8  2003/09/08 16:31:20  roger
Enterprise was changed to 16 char length

Revision 1.7  2003/04/23 20:44:17  dave
adding coalesce

Revision 1.6  2003/04/21 16:29:21  dave
left joined some stuff to get entitiy info .. even though a role
record or description.  Role records get defaulted to 'R'
and a default description will be applied (when that is not there)

Revision 1.5  2003/04/14 16:43:09  dave
speed and cleanup

Revision 1.4  2003/04/02 19:47:07  dave
removing the need for addperm in 8140

Revision 1.3  2002/09/20 18:02:53  dave
simplifying Classify section of SQL

Revision 1.2  2002/09/20 17:33:25  dave
add classification to entityGroup

Revision 1.1  2002/05/07 21:36:10  gregg
was 1040

Revision 1.11  2002/03/01 20:57:57  dave
more fixes to SP's and tweeking to how assocs are
handled in entitygroups

Revision 1.10  2002/02/13 17:43:55  dave
provided an isdisplayable function for the entityGroup

Revision 1.9  2002/02/10 01:03:28  dave
mass sp fixes for compile

Revision 1.8  2002/01/31 19:02:09  dave
removed

Revision 1.7  2001/08/06 23:37:25  dave
first pass at a search request

Revision 1.6  2001/07/21 04:02:09  roger
Change MetaLinkAttribute to MetaLinkAttr
Change "opicm" to @t_schema in some

Revision 1.5  2001/03/26 15:39:41  roger
Misc clean up

Revision 1.4  2001/03/19 21:10:27  dave
Took out the reference to 1044 in 1040.  Made a stand alone file called GBL1044.TXT

Revision 1.3  2001/03/16 18:27:48  roger
Added branding feature to stored procedures

Revision 1.2  2001/03/16 03:38:53  roger
Added Log keyword

@desc=Get navigation possibilites for a given Role and EntityType
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl8140.txt,v 1.12 2010/06/21 15:43:16 wendy Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE sp_cursor1 CURSOR FOR
SELECT
 RTRIM(ME.EntityClass)
,COALESCE(RTRIM(PERM2.LinkValue),'R')
,COALESCE(RTRIM(MD.LongDescription), 'No Description in Meta')
,COALESCE(MD.NLSID,1)
,COALESCE(RTRIM(MD.ShortDescription),'No Description in Meta')
,CASE WHEN MREL.Enterprise IS NULL THEN 'N' ELSE (CASE MREL.LinkCode WHEN 'Relator' THEN 'R' ELSE 'A' END )END
,COALESCE(RTRIM(MREL.LINKTYPE1),'')
,COALESCE(RTRIM(MREL.LINKTYPE2),'')
,CASE 
   WHEN MC.LinkValue IS NULL THEN 'N'
   ELSE 'Y'
 END AS CLASSIFY
FROM @t_schema.MetaEntity ME
LEFT join @t_schema.MetaDescription MD ON
    MD.Enterprise = :Enterprise
AND MD.DescriptionType = ME.EntityType
AND MD.DescriptionClass = ME.EntityClass
AND MD.NLSID IN (1,:NLSID)
AND MD.Valfrom <= :ValOn AND :ValOn  < MD.Valto AND MD.EffFrom <= :EffOn AND :EffOn < MD.EffTo
LEFT JOIN @t_schema.MetaLinkAttr PERM2 ON
    PERM2.Enterprise = :Enterprise
AND PERM2.LinkType IN ('Role/Entity','Role/Assoc')
AND PERM2.LinkType1 = :RoleCode
AND PERM2.LinkType2 = ME.EntityType
AND PERM2.ValFrom <= :ValOn AND :ValOn < PERM2.Valto AND PERM2.EffFrom <= :EffOn AND :EffOn < PERM2.EffTo
LEFT JOIN @t_schema.MetaLinkAttr MREL ON
    MREL.Enterprise = :Enterprise
AND MREL.LinkType  =  ME.EntityType
AND MREL.LinkCode in ('Relator', 'Assoc')
AND MREL.ValFrom <= :ValOn AND :ValOn < MREL.Valto AND MREL.EffFrom <= :EffOn AND :EffOn < MREL.EffTo
LEFT JOIN @t_schema.MetaLinkAttr MC ON
    MC.Enterprise = :Enterprise
AND MC.LinkType = 'Entity/Char'
AND MC.LinkType1 = :EntityType
AND MC.LinkCode  = 'Classify'
AND MC.ValFrom <= :ValOn AND :ValOn < MC.Valto AND MC.EffFrom <= :EffOn AND :EffOn < MC.EffTo
WHERE
    ME.Enterprise = :Enterprise
AND ME.EntityType = :EntityType
AND ME.ValFrom <= :ValOn AND :ValOn < ME.Valto AND ME.EffFrom <= :EffOn AND :EffOn < ME.EffTo;
@execute
EXEC SQL OPEN sp_cursor1;
@parameters
inout ReturnStatus int
in RoleCode varchar(32)
in Enterprise varchar(16)
in EntityType varchar(32)
in NLSID int
in ValOn varchar(27)
in EffOn varchar(27)
@end



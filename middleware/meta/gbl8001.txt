@name=GBL8001
@noremote=true
@type=basic
@dbase=opicmpdh
@fenced=true
@narrative

Search Filter API Support

$Log: gbl8001.txt,v $
Revision 1.15  2010/06/21 15:43:24  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.14  2004/10/20 21:01:47  dave
changes to gen parm

Revision 1.13  2004/03/23 22:42:08  joan
fb fixes

Revision 1.12  2004/03/23 22:09:34  joan
fb fixes

Revision 1.11  2004/02/20 20:21:56  roger
Must be @t_schema

Revision 1.10  2004/02/20 18:09:36  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.9  2003/10/28 19:23:17  dave
speed

Revision 1.8  2003/08/20 23:45:49  joan
debug

Revision 1.7  2003/08/20 20:50:40  joan
add rtrim

Revision 1.6  2002/06/07 23:28:16  dave
8000 fix

Revision 1.5  2002/03/13 16:20:32  dave
fix to GBL8001 missed a conversion problem

Revision 1.4  2002/03/13 15:55:52  dave
null pointer fix.. MetaFlag parent cannot be null.

Revision 1.3  2002/03/08 03:27:02  dave
fixed GBL8001 for proper filter working

Revision 1.2  2002/03/05 23:28:03  dave
SP8001 fix on parms

Revision 1.1  2002/03/05 23:08:34  dave
first pass at the new Search Action Item function for EntityList

@desc=build a list of Entities Based upon Search Criteria for a given text string
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl8001.txt,v 1.15 2010/06/21 15:43:24 wendy Exp $";
EXEC SQL END DECLARE SECTION;

EXEC SQL DECLARE NavCur CURSOR FOR
SELECT
 Entity2Type
,Entity2ID
FROM @t_schema.trsNavigate
WHERE
    Level = 0
AND SessionID = :SessionID
;

@execute

// Now get the new records
EXEC SQL INSERT INTO @t_schema.trsNavigate
WITH myFilter(Domain, AttributeCode, FlagCode) AS (
Select
'DOMAIN',
WFLAG.AttributeCode,
WFLAG.AttributeValue
From  @t_schema.Flag WFLAG
WHERE
    WFLAG.Enterprise = :Enterprise
AND WFLAG.EntityType = 'WG'
AND WFLAG.EntityID = :WGID
AND WFLAG.ValFrom <= :ValOn AND :ValOn< WFLAG.ValTo AND WFLAG.EffFrom <= :EffOn AND :EffOn < WFLAG.EffTo
)
 SELECT DISTINCT
  :Enterprise
 ,:SessionID
 ,'SEARCH'
 ,'EAN'
 ,0
 ,1
 ,'D'
 ,'D'
 ,'NOOP'
 ,0
 ,'NOOP'
 ,0
 ,T.EntityType
 ,T.EntityID
 ,:ValOn
 ,:EffOn
FROM @t_schema.metalinkattr MLA
INNER JOIN @t_schema.Text T ON
    T.Enterprise = :Enterprise
AND T.AttributeValue like rtrim(:AttributeValue) || '%'
AND T.AttributeCode = MLA.LinkCode
AND T.EntityType = MLA.LinkType2
AND T.ValFrom <= :ValOn AND :ValOn< T.ValTo AND T.EffFrom <= :EffOn AND :EffOn < T.EffTo
INNER JOIN @t_schema.DynaSearch DS on
    DS.Enterprise = :Enterprise
AND DS.EntityType = T.EntityType
AND DS.AttributeCode = T.attributeCode
AND DS.SessionID = :SessionID
LEFT JOIN myfilter MFLAG on
  MFLAG.Domain = 'DOMAIN'
LEFT JOIN @t_schema.Flag TFLAG ON
    TFLAG.Enterprise = :Enterprise
AND TFLAG.EntityType = T.EntityType
AND TFLAG.EntityID = T.EntityID
AND MFLAG.Domain = 'DOMAIN'
AND TFLAG.ValFrom <= :ValOn AND :ValOn< TFLAG.ValTo AND TFLAG.EffFrom <= :EffOn AND :EffOn < TFLAG.EffTo
LEFT JOIN myfilter MFLAG2 on
  MFLAG2.Domain = 'DOMAIN'
AND MFLAG2.AttributeCode = TFLAG.Attributecode
AND MFLAG2.FlagCode = TFLAG.AttributeValue
WHERE
   MLA.Enterprise = :Enterprise
AND MLA.LinkType = 'Action/Entity'
AND MLA.LinkType1 = :ActionType
AND MLA.LinkValue = 'Target'
AND 1 = (CASE
  WHEN MFLAG.DOMAIN IS NOT NULL AND MFLAG2.Domain IS NULL THEN 0
 ELSE 1 END)
;


EXEC SQL COMMIT WORK;

// O.K.  Now lets suck it back out with all the niceties

EXEC SQL OPEN NavCur;

@parameters
inout ReturnStatus int
in SessionID int
in Enterprise varchar(16)
in ActionType varchar(32)
in AttributeValue varchar(254)
in WGID int
in ValOn varchar(27)
in EffOn varchar(27)
@end



@name=GBL0977
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative
Manages the update of a MarketMessageAttribute - the record is always there when coming from Series


// $Log: gbl0977.txt,v $
// Revision 1.12  2012/05/21 02:32:06  praveen
// Fix syntax error
//
// Revision 1.11  2010/07/21 19:56:42  praveen
// Change Long data type to Sqlint32 in support for db2 9.5
//
// Revision 1.10  2008/11/17 17:05:19  praveen
// Supporting dual catdb schema
//
// Revision 1.9  2007/05/11 17:50:36  bala
// add null value control
//
// Revision 1.8  2007/01/25 17:18:22  bala
// commas are important!
//
// Revision 1.7  2007/01/25 17:08:38  bala
// add productposition
//
// Revision 1.6  2006/04/12 22:50:58  bala
// reverting back to vesion 1.3
//
// Revision 1.5  2006/04/12 18:19:28  bala
// syntax fix
//
// Revision 1.4  2006/04/12 18:10:28  bala
// add insert/delete since mm can be coming from SIMPLE ve
//
// Revision 1.3  2006/04/11 18:39:22  bala
// add noremote to stop remotedatabase stub
//
// Revision 1.2  2006/04/06 23:44:49  bala
// nlsid fix
//
// Revision 1.1  2006/03/31 19:37:23  bala
// Lenovo updates for featurebenefit and marketingmessages
//

@desc=Manages the update of a MarketMessageAttribute - the record is always there
@fenced=true
@results=0
@parmstyle=GENERAL
@sql

EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl0977.txt,v 1.12 2012/05/21 02:32:06 praveen Exp $";
sqlint32 count = 0;
EXEC SQL END DECLARE SECTION;
@execute

if (strcmp(schema,"BIGCAT") == 0) {
	EXEC SQL
	update bigcat.marketinfo
	set
	 marketmessage =  case :marketmessage when 'null' then NULL else :marketmessage end,
	 productposition = case :productposition when 'null' then NULL else :productposition end
	where
	enterprise = :enterprise and
	collEntityType = :collentitytype and
	collEntityID = :collentityid and
	countrylist = :countrylist and
	NLSID = :NLSID
	;
}
else if (strcmp(schema,"IBMCAT") == 0) {
	EXEC SQL
	update ibmcat.marketinfo
	set
	 marketmessage =  case :marketmessage when 'null' then NULL else :marketmessage end,
	 productposition = case :productposition when 'null' then NULL else :productposition end
	where
	enterprise = :enterprise and
	collEntityType = :collentitytype and
	collEntityID = :collentityid and
	countrylist = :countrylist and
	NLSID = :NLSID
	;
}

//EXEC SQL COMMIT WORK;

@parameters
inout ReturnStatus int
in enterprise varchar(8)
in countrylist varchar(8)
in collentitytype varchar(32)
in collentityid int
in NLSID int
in marketmessage varchar(32671)
in productposition varchar(32671)
in isactive int
in schema varchar(8)
@end

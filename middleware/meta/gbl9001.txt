@name=GBL9001
@type=basic
@dbase=opicmpdh
@noremote=true
@addperm=false
@narrative

  This returns HighID for a given EntityType
 
$Log: gbl9001.txt,v $
Revision 1.13  2010/06/21 15:42:58  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.12  2004/10/20 21:01:50  dave
changes to gen parm

Revision 1.11  2004/02/20 20:21:58  roger
Must be @t_schema

Revision 1.10  2004/02/20 18:09:38  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.9  2003/09/08 16:31:22  roger
Enterprise was changed to 16 char length

Revision 1.8  2003/02/25 21:42:48  bala
return the smallest entityid, and the number of rows to process

Revision 1.7  2003/01/23 23:35:39  dave
ODS engine SP's

Revision 1.6  2003/01/23 23:18:22  dave
mods to ODS SP's for Relator Pickups

Revision 1.5  2003/01/14 00:28:23  dave
added schema parameter

Revision 1.4  2003/01/14 00:26:53  dave
putting schema filter on 9001

Revision 1.3  2003/01/10 00:10:56  dave
added resetEntityItem on the EntityGroup

Revision 1.2  2003/01/09 19:19:44  dave
sp fixes

Revision 1.1  2003/01/09 19:06:27  dave
new SP's for modified ODS Init

@desc=This returns The High ID for a given EntityType
@fenced=true
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl9001.txt,v 1.13 2010/06/21 15:42:58 wendy Exp $";
EXEC SQL END DECLARE SECTION;

EXEC SQL DECLARE entity_cursor CURSOR FOR


WITH mymax(MaxEntityId,MinEntityId,EntityRows) AS (
SELECT
  MAX(E.EntityID),Min(E.EntityID),Count(*)
FROM  @t_schema.ENTITY E 
LEFT JOIN @t_schema.MetaLinkAttr M1 ON
        M1.Enterprise = :Enterprise
AND M1.LinkType = 'Entity/Status/ODSFilter'
AND M1.LinkType1 = :EntityType 
AND M1.Linktype2 = :ODSSchema
AND M1.Valto = :forever AND CURRENT TIMESTAMP BETWEEN M1.EffFrom AND M1.EffTo
LEFT JOIN @t_schema.Flag F1 ON
        F1.Enterprise = :Enterprise
AND F1.EntityType = E.EntityType
AND F1.EntityID = E.EntityID
AND F1.AttributeCode = M1.LinkCode
AND F1.AttributeValue = M1.LinkValue
AND F1.Valto = :forever AND CURRENT TIMESTAMP BETWEEN F1.EffFrom AND F1.EffTo
WHERE 
    E.Enterprise = :Enterprise
AND E.EntityType = :EntityType 
AND E.Valto = :forever AND CURRENT TIMESTAMP BETWEEN E.EffFrom AND E.EffTo
AND 1 = (CASE 
    WHEN M1.Enterprise IS NOT NULL AND F1.Enterprise IS NULL THEN 0 
    ELSE 1 END)
UNION ALL
SELECT
  MAX(R.EntityID),Min(r.EntityID),Count(*)
FROM  @t_schema.Relator R 
LEFT JOIN @t_schema.MetaLinkAttr M1 ON
        M1.Enterprise = :Enterprise
AND M1.LinkType = 'Entity/Status/ODSFilter'
AND M1.LinkType1 = :EntityType 
AND M1.Linktype2 = :ODSSchema
AND M1.Valto = :forever AND CURRENT TIMESTAMP BETWEEN M1.EffFrom AND M1.EffTo
LEFT JOIN @t_schema.Flag F1 ON
        F1.Enterprise = :Enterprise
AND F1.EntityType = R.EntityType
AND F1.EntityID = R.EntityID
AND F1.AttributeCode = M1.LinkCode
AND F1.AttributeValue = M1.LinkValue
AND F1.Valto = :forever AND CURRENT TIMESTAMP BETWEEN F1.EffFrom AND F1.EffTo
WHERE 
    R.Enterprise = :Enterprise
AND R.EntityType = :EntityType 
AND R.Valto = :forever AND CURRENT TIMESTAMP BETWEEN R.EffFrom AND R.EffTo
AND 1 = (CASE 
    WHEN M1.Enterprise IS NOT NULL AND F1.Enterprise IS NULL THEN 0 
    ELSE 1 END)
)
SELECT MAX(MaxEntityID),MIN(MinEntityId),MAX(EntityRows) FROM myMax
;

;

@execute

// Now open the cursor
EXEC SQL OPEN entity_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in EntityType varchar(32)
in ODSSchema varchar(16)
@end



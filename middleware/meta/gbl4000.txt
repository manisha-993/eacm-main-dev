@name=GBL4000
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative
@addperm=false
@narrative
-----------------------------------------------------------
--  This returns all the Entities and its meta attributes
--  based on attribute class(s)
--  This is used in the Reverse ODS application
-----------------------------------------------------------
$Log: gbl4000.txt,v $
Revision 1.14  2010/06/21 15:42:54  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.13  2004/10/20 21:01:42  dave
changes to gen parm

Revision 1.12  2004/02/20 20:21:52  roger
Must be @t_schema

Revision 1.11  2004/02/20 18:09:32  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.10  2003/09/08 16:31:14  roger
Enterprise was changed to 16 char length

Revision 1.9  2003/03/10 23:12:48  bala
Retrieve 'A'br attributes too

Revision 1.8  2001/07/21 04:02:14  roger
Change MetaLinkAttribute to MetaLinkAttr
Change "opicm" to @t_schema in some

Revision 1.7  2001/07/05 21:32:41  bala
Added type 'S' to attributetype check

Revision 1.6  2001/03/21 17:47:18  bala
Added the attribute type column

Revision 1.5  2001/03/17 04:47:11  roger
Misc clean up

Revision 1.4  2001/03/16 18:27:55  roger
Added branding feature to stored procedures

Revision 1.3  2001/03/16 03:39:00  roger
Added Log keyword

@desc=Get Meta Entities and its Attributes based on Attribute class(s)
@fenced=true
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl4000.txt,v 1.14 2010/06/21 15:42:54 wendy Exp $";
EXEC SQL END DECLARE SECTION;
if (strcmp(EntityClass,"TEXT") == 0) {
EXEC SQL DECLARE text_cursor CURSOR FOR
SELECT DISTINCT mea.linktype1 AS entitytype
   ,ma.entitytype AS attributecode
   ,RTRIM(coalesce(ml.linkValue,'0'))  as odsLength
   ,ma.entityclass AS attributetype  
 FROM  @t_schema.metaentity  me
 INNER JOIN @t_schema.MetaLinkAttr mea ON
   me.entitytype=mea.linktype1
   AND mea.linktype='Entity/Attribute'
   AND me.enterprise = mea.enterprise
   AND mea.ValFrom <= :now AND :now < mea.ValTo AND mea.EffFrom <= :now AND :now < mea.EffTo
 LEFT join  @t_schema.MetaLinkAttr ml on
   me.enterprise = ml.enterprise
   AND mea.linktype2 = ml.linktype2
   AND ml.linktype1='ODS'
   AND ml.linktype = 'ODSLength'
   AND ml.ValFrom <= :now AND :now < ml.ValTo AND ml.EffFrom <= :now AND :now < ml.EffTo
 INNER JOIN @t_schema.metaentity ma ON
   mea.linktype2=ma.entitytype
   AND mea.enterprise = ma.enterprise
   AND ma.entityclass IN ('I','T','U','S','A')
   AND ma.ValFrom <= :now AND :now < ma.ValTo AND ma.EffFrom <= :now AND :now < ma.EffTo
 WHERE
   me.entityclass IN ('Entity','Relator')
   AND me.enterprise= :Enterprise
   AND me.ValFrom <= :now AND :now < me.ValTo AND me.EffFrom <= :now AND :now < me.EffTo
 ORDER BY entitytype,attributecode FOR READ ONLY;

}
else if (strcmp(EntityClass,"FLAG") == 0) {
EXEC SQL DECLARE flag_cursor CURSOR FOR
SELECT DISTINCT mea.linktype1 AS entitytype
   ,ma.entitytype AS attributecode
   ,RTRIM(coalesce(ml.linkValue,'0'))  as odsLength
   ,ma.entityclass AS attributetype  
 FROM  @t_schema.metaentity  me
 INNER JOIN @t_schema.MetaLinkAttr mea ON
   me.entitytype=mea.linktype1
   AND mea.linktype='Entity/Attribute'
   AND me.enterprise = mea.enterprise
   AND mea.ValFrom <= :now AND :now < mea.ValTo AND mea.EffFrom <= :now AND :now < mea.EffTo
 LEFT join  @t_schema.MetaLinkAttr ml on
   me.enterprise = ml.enterprise
   AND mea.linktype2 = ml.linktype2
   AND ml.linktype1='ODS'
   AND ml.linktype = 'ODSLength'
   AND ml.ValFrom <= :now AND :now < ml.ValTo AND ml.EffFrom <= :now AND :now < ml.EffTo
 INNER JOIN @t_schema.metaentity ma ON
   mea.linktype2=ma.entitytype
   AND mea.enterprise = ma.enterprise
   AND ma.entityclass= 'F'
   AND ma.ValFrom <= :now AND :now < ma.ValTo AND ma.EffFrom <= :now AND :now < ma.EffTo
 WHERE
   me.entityclass IN ('Entity','Relator')
   AND me.enterprise= :Enterprise
   AND me.ValFrom <= :now AND :now < me.ValTo AND me.EffFrom <= :now AND :now < me.EffTo
 ORDER BY entitytype,attributecode FOR READ ONLY;
}
else if (strcmp(EntityClass,"LONGTEXT") == 0) {
EXEC SQL DECLARE lt_cursor CURSOR FOR
SELECT DISTINCT mea.linktype1 AS entitytype
   ,ma.entitytype AS attributecode
   ,RTRIM(coalesce(ml.linkValue,'0'))  as odsLength
   ,ma.entityclass AS attributetype  
 FROM  @t_schema.metaentity  me
 INNER JOIN @t_schema.MetaLinkAttr mea ON
   me.entitytype=mea.linktype1
   AND mea.linktype='Entity/Attribute'
   AND me.enterprise = mea.enterprise
   AND mea.ValFrom <= :now AND :now < mea.ValTo AND mea.EffFrom <= :now AND :now < mea.EffTo
 LEFT join  @t_schema.MetaLinkAttr ml on
   me.enterprise = ml.enterprise
   AND mea.linktype2 = ml.linktype2
   AND ml.linktype1='ODS'
   AND ml.linktype = 'ODSLength'
   AND ml.ValFrom <= :now AND :now < ml.ValTo AND ml.EffFrom <= :now AND :now < ml.EffTo
 INNER JOIN @t_schema.metaentity ma ON
   mea.linktype2=ma.entitytype
   AND mea.enterprise = ma.enterprise
   AND ma.entityclass= 'L'
   AND ma.ValFrom <= :now AND :now < ma.ValTo AND ma.EffFrom <= :now AND :now < ma.EffTo
 WHERE
   me.entityclass IN ('Entity','Relator')
   AND me.enterprise= :Enterprise
   AND me.ValFrom <= :now AND :now < me.ValTo AND me.EffFrom <= :now AND :now < me.EffTo
 ORDER BY entitytype,attributecode FOR READ ONLY;
}
else if (strcmp(EntityClass,"BLOB") == 0) {
EXEC SQL DECLARE blob_cursor CURSOR FOR
SELECT DISTINCT mea.linktype1 AS entitytype
   ,ma.entitytype AS attributecode
   ,RTRIM(coalesce(ml.linkValue,'0'))  as odsLength
   ,ma.entityclass AS attributetype  
 FROM  @t_schema.metaentity  me
 INNER JOIN @t_schema.MetaLinkAttr mea ON
   me.entitytype=mea.linktype1
   AND mea.linktype='Entity/Attribute'
   AND me.enterprise = mea.enterprise
   AND mea.ValFrom <= :now AND :now < mea.ValTo AND mea.EffFrom <= :now AND :now < mea.EffTo
 LEFT join  @t_schema.MetaLinkAttr ml on
   me.enterprise = ml.enterprise
   AND mea.linktype2 = ml.linktype2
   AND ml.linktype1='ODS'
   AND ml.linktype = 'ODSLength'
   AND ml.ValFrom <= :now AND :now < ml.ValTo AND ml.EffFrom <= :now AND :now < ml.EffTo
 INNER JOIN @t_schema.metaentity ma ON
   mea.linktype2=ma.entitytype
   AND mea.enterprise = ma.enterprise
   AND ma.entityclass IN ('P','D','B')
   AND ma.ValFrom <= :now AND :now < ma.ValTo AND ma.EffFrom <= :now AND :now < ma.EffTo
 WHERE
   me.entityclass IN ('Entity','Relator')
   AND me.enterprise= :Enterprise
   AND me.ValFrom <= :now AND :now < me.ValTo AND me.EffFrom <= :now AND :now < me.EffTo
 ORDER BY entitytype,attributecode FOR READ ONLY;
}
@execute
if (strcmp(EntityClass,"TEXT") == 0) {
        EXEC SQL OPEN text_cursor;
}
else if (strcmp(EntityClass,"FLAG") == 0) {
        EXEC SQL OPEN flag_cursor;
}
else if (strcmp(EntityClass,"LONGTEXT") == 0) {
        EXEC SQL OPEN lt_cursor;
}
else if (strcmp(EntityClass,"BLOB") == 0) {
        EXEC SQL OPEN blob_cursor;
}
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in EntityClass varchar(32)
@end



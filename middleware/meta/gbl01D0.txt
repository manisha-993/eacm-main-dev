@name=GBL01D0
@type=basic
@noremote=true
@dbase=opicmpdh
@fenced=true
@narrative


FEEDING THE TRSNETTERFINAL table with all matches in a select insert statement for
a given range of entityid's

$Log
@results=0
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;

char brand[80] = "$Id: gbl01D0.txt,v 1.4 2009/01/23 20:43:58 yang Exp $";
EXEC SQL END DECLARE SECTION;

// O.K. Lets seed the Explosion table with all the relator churn.

EXEC SQL insert into bigcatd.trsNetterFinal
SELECT
 :enterprise
,:sessionid
,:actiontype
,:epoch
,:forever
,E.ValFrom
,E.EntityType
,E.EntityID
,'ON'
,E.EntityType
,E.EntityID
,'ON'
,0
,'S'
,''
,'XX'
,0
,'XX'
,0
FROM opicm.entity E
LEFT JOIN @t_schema.MetaLinkAttr M1 ON
		M1.Enterprise = :enterprise
AND M1.LinkType = 'Entity/Status/ODSFilter'
AND M1.LinkType1 = :entitytype
AND M1.Linktype2 = :filterkey
AND M1.Valto = :forever AND CURRENT TIMESTAMP BETWEEN M1.EffFrom AND M1.EffTo
LEFT JOIN @t_schema.Flag F1 ON
		F1.Enterprise = :enterprise
AND F1.EntityType = E.EntityType
AND F1.EntityID = E.EntityID
AND F1.AttributeCode = M1.LinkCode
AND F1.AttributeValue = M1.LinkValue
AND F1.Valto = :forever AND CURRENT TIMESTAMP BETWEEN F1.EffFrom AND F1.EffTo
where
    e.enterprise = :enterprise
and e.entitytype = :entitytype
and e.valto = :forever and e.effto > current timestamp
and e.entityid*1 between :startentityid and :endentityid
AND 1 = (CASE
  WHEN M1.Enterprise IS NOT NULL AND F1.Enterprise IS NULL THEN 0
  ELSE 1 END)
;

EXEC SQL COMMIT WORK;

@parameters
inout ReturnStatus int
in sessionid int
in enterprise varchar(16)
in filterkey varchar(32)
in actiontype varchar(32)
in entitytype varchar(32)
in startentityid int
in endentityid int
@end

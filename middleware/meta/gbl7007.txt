@name=GBL7007
@noremote=true
@type=basic
@dbase=opicmpdh

@narrative

This guy will be soley responsible for returning all the Attributes for a given entity type
you will want back all 

$Log: gbl7007.txt,v $
Revision 1.22  2010/06/21 15:43:19  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.21  2004/10/20 21:01:43  dave
changes to gen parm

Revision 1.20  2004/10/20 20:26:14  dave
more parmstyle

Revision 1.19  2004/10/19 21:00:40  dave
more client settings

Revision 1.18  2004/10/13 18:28:39  dave
adding a reset feature to ABREntityGroup

Revision 1.17  2004/10/05 22:00:53  dave
minor tweak

Revision 1.16  2004/02/20 20:21:53  roger
Must be @t_schema

Revision 1.15  2004/02/20 18:09:33  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.14  2003/07/23 17:11:10  joan
adjust for XML attributes

Revision 1.13  2003/07/17 18:18:18  dave
syncing EANNetChanges Up

Revision 1.12  2002/06/03 20:11:57  joan
change @dbase to opicmpdh

Revision 1.11  2002/04/15 23:57:13  dave
GBL8000 fix on Date filters

Revision 1.10  2002/04/10 23:28:45  dave
Skipping flag codes that no longer apply in putPDHFlag

Revision 1.9  2002/04/10 23:03:59  dave
attempted speed up of GBL7007

Revision 1.8  2002/04/08 17:48:17  dave
took role capabiliy check back out of data pull

Revision 1.7  2002/04/08 17:18:53  dave
Turned on role selectability on Data

Revision 1.6  2002/03/18 19:32:44  dave
remove EANAddressable from external interface

Revision 1.5  2002/03/18 18:22:30  dave
attempt to speed up access to attribtues

Revision 1.4  2002/03/08 22:56:36  dave
fixing null pointer and SP7007

Revision 1.3  2002/03/08 22:02:43  dave
more sp fixes and added a new Role Function for default
values maintainer

Revision 1.2  2002/03/08 21:44:45  dave
added a defaultindex for default values testing

Revision 1.1  2002/03/08 18:46:55  dave
first attempt at pulling data for edit (text and flags only)

@desc=Get All Attributes for the records in the trsNavigateTable
@fenced=true
@parmstyle=GENERAL
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;

char brand[80] = "$Id: gbl7007.txt,v 1.22 2010/06/21 15:43:19 wendy Exp $";
EXEC SQL END DECLARE SECTION;

EXEC SQL DECLARE sp_cursor1 CURSOR FOR 
With Entities(EntityType, EntityID) AS
(SELECT DISTINCT Entity1Type,Entity1ID from @t_schema.trsNavigate WHERE SESSIONID = :SessionID 
UNION 
SELECT DISTINCT Entity2Type,Entity2ID from @t_schema.trsNavigate WHERE SESSIONID = :SessionID 
UNION
SELECT DISTINCT EntityType,EntityID from @t_schema.trsNavigate WHERE SESSIONID = :SessionID 
)
SELECT
 RTRIM(T.EntityType)  as EntityType
,T.EntityID  as EntityID
,RTRIM(T.AttributeCode) as AttributeCode
,T.NLSID as NLSID
,RTRIM(T.AttributeValue) as AttributeValue
,T.EffFrom as EffFrom
,T.EffTo as EffTo
FROM Entities N
INNER JOIN @t_schema.Text T ON
    T.Enterprise = :Enterprise
AND T.EntityType = N.EntityType
AND T.EntityID = N.EntityID
AND T.NLSID in (1,:NLSID)
AND T.ValFrom <= :ValOn AND :ValOn <= T.ValTo AND T.EffFrom <= :EffOn AND :EffOn <= T.EffTo
UNION ALL
SELECT
 RTRIM(F.EntityType)
,F.EntityID
,RTRIM(F.AttributeCode)
,1
,RTRIM(F.AttributeValue)
,F.EffFrom
,F.EffTo
FROM Entities N
INNER JOIN @t_schema.Flag F ON
    F.Enterprise = :Enterprise
AND F.EntityType = N.EntityType
AND F.EntityID = N.EntityID
AND F.ValFrom <= :ValOn AND :ValOn <= F.ValTo AND F.EffFrom <= :EffOn AND :EffOn <= F.EffTo
UNION ALL
SELECT
 RTRIM(T.EntityType)
,T.EntityID
,RTRIM(T.AttributeCode)
,T.NLSID
,T.AttributeValue
,T.EffFrom
,T.EffTo
FROM Entities N
INNER JOIN @t_schema.LongText T ON
    T.Enterprise = :Enterprise
AND T.EntityType = N.EntityType
AND T.EntityID = N.EntityID
AND T.NLSID IN (1,:NLSID)
AND T.ValFrom <= :ValOn AND :ValOn <= T.ValTo AND T.EffFrom <= :EffOn AND :EffOn <= T.EffTo
UNION ALL
SELECT
 RTRIM(B.EntityType)
,B.EntityID
,RTRIM(B.AttributeCode)
,B.NLSID
,B.BlobExtension
,B.EffFrom
,B.EffTo
FROM Entities N
INNER JOIN @t_schema.Blob B ON
    B.Enterprise = :Enterprise
AND B.EntityType = N.EntityType
AND B.EntityID = N.EntityID
AND B.NLSID in (1, :NLSID)
AND B.ValFrom <= :ValOn AND :ValOn <= B.ValTo AND B.EffFrom <= :EffOn AND :EffOn <= B.EffTo
;

@execute

//
// Insert the records here...
//

EXEC SQL OPEN sp_cursor1;

@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in SessionID int
in RoleCode varchar(33)
in NLSID int
in ValOn varchar(27)
in EffOn varchar(27)
@end



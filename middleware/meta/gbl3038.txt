@name=GBL3038
@noremote=true
@type=basic
@dbase=opicmpdh
@addperm=true
@narrative
$Log: gbl3038.txt,v $
Revision 1.9  2010/06/21 15:43:22  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.8  2004/10/20 21:01:42  dave
changes to gen parm

Revision 1.7  2004/02/20 20:21:52  roger
Must be @t_schema

Revision 1.6  2004/02/20 18:09:32  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.5  2003/09/08 16:31:13  roger
Enterprise was changed to 16 char length

Revision 1.4  2001/07/27 00:36:11  roger
Add Log keyword and/or branding as needed

@desc=build a list of Attributes from MetaLinkAttr based upon enterprise, linktype, and linkcode
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl3038.txt,v 1.9 2010/06/21 15:43:22 wendy Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE sp_cursor CURSOR FOR
SELECT
 MRA.ENTERPRISE
,MRA.LINKTYPE
,MRA.LINKTYPE1
,MRA.LINKTYPE2
,MRA.LINKCODE
,MRA.LINKVALUE
,COALESCE(MA.LONGDESCRIPTION, ' ') as linktype2_desc
,COALESCE(MA1.LONGDESCRIPTION, ' ') as linktype1_desc
,COALESCE(MA.SHORTDESCRIPTION, ' ') as linktype2_stdesc
,COALESCE(MA1.SHORTDESCRIPTION, ' ') as linktype1_stdesc

FROM @t_schema.MetaLinkAttr MRA
LEFT JOIN @t_schema.MetaDescription MA ON
MA.Enterprise = MRA.Enterprise AND
MA.DescriptionType = MRA.LinkType2 AND
MA.DescriptionClass > '9999 ' and
MA.NLSID in (1, :NLSID)  AND
MA.ValFrom <= :ValOn AND :ValOn < MA.ValTo AND
MA.EffFrom <= :EffOn AND :EffOn < MA.EffTo

LEFT JOIN @t_schema.MetaDescription MA1 ON
MA1.Enterprise = MRA.Enterprise AND
MA1.DescriptionType = MRA.LinkType1 AND
MA1.DescriptionClass > '9999 ' and
MA1.NLSID in (1, :NLSID) AND
MA1.ValFrom <= :ValOn AND :ValOn < MA1.ValTo AND
MA1.EffFrom <= :EffOn AND :EffOn < MA1.EffTo

WHERE
MRA.Enterprise = :Enterprise
AND MRA.LinkType = :LinkType
and MRA.linkcode = :LinkCode
AND MRA.Valfrom <= :ValOn AND :ValOn < MRA.ValTo AND
MRA.EffFrom <= :EffOn AND :EffOn < MRA.EffTo
ORDER BY
 linktype1_desc
,linktype2_desc
;
@execute
EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in LinkType varchar(32)
in LinkCode varchar(32)
in OPENID int
in NLSID int
in ValOn varchar(26)
in EffOn varchar(26)
@end



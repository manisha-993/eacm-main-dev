@name=GBL4013
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative
--------------------------------------------------------------------------------------------
-- Retrieve a Product Record from the CatDB
-- We do not get related data here
-- but we always get the stubs to get collections 
-- of other data
--------------------------------------------------------------------------------------------
$Log: gbl4013.txt,v $
Revision 1.10  2015/02/24 21:42:28  ptatinen
Add INVNAME as per Lenovo CQ

Revision 1.9  2010/06/21 15:43:20  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.8  2006/10/30 18:43:51  gregg
fix

Revision 1.7  2006/10/30 17:23:28  gregg
projcdnam

Revision 1.6  2005/10/18 21:07:53  gregg
add langugaes, languages_fc

Revision 1.5  2005/10/07 18:22:08  gregg
add WARRTYPE/WARRPRIOD cols

Revision 1.4  2005/09/13 15:47:06  gregg
sync params

Revision 1.3  2005/06/22 21:31:00  gregg
fix for GBL4013

Revision 1.2  2005/06/22 20:49:19  gregg
add countrylist

Revision 1.1  2005/05/20 19:49:26  gregg
initial load



@desc=Retrieve a Part Number Record from the CatDB table
@fenced=true
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl4013.txt,v 1.10 2015/02/24 21:42:28 ptatinen Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE sp_cursor CURSOR FOR
SELECT
  ENTERPRISE
, COUNTRYCODE
, LANGUAGECODE
, NLSID
, COUNTRYLIST
, WWENTITYTYPE
, WWENTITYID
, LOCENTITYTYPE
, LOCENTITYID
, MODELNAME
, WWPARTNUMBER
, PARTNUMBER
, MARKETINGDESC
, ANNDATE
, WITHDRAWLDATE
, FOTDATE
, PLANAVAILDATE
, PUBFROMDATE
, PUBTODATE
, FLFILSYSINDC
, FLFILSYSINDC_FC
, OFFCOUNTRY
, OFFCOUNTRY_FC
, OSLEVEL
, OSLEVEL_FC
, MKTGNAME
, SHORTDESC
, WARRTYPE
, WARRTYPE_FC
, WARRPRIOD
, WARRPRIOD_FC
, LANGUAGES
, LANGUAGES_FC
, PUBLISHFLAG
, FOTPUBLISHFLAG
, STATUS
, STATUS_FC
,  PROJCDNAM
,  PROJCDNAM_FC
, VALFROM
, VALTO
, ISACTIVE
, INVNAME
FROM gbli.PRODUCT 
WHERE
    Enterprise = :Enterprise
AND LocEntityType = :LocEntityType
AND LocEntityID = :LocEntityID
AND COUNTRYLIST = :CountryList
;
@execute
EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in LocEntityType varchar(32)
in LocEntityID int
in CountryList varchar(8)
@end

@name=GBL2981
@noremote=true
@type=basic
@addperm=true
@dbase=opicmpdh
@narrative
--------------------------------------------------------------------------
--   Replaces WHY2981
--------------------------------------------------------------------------
$Log: gbl2981.txt,v $
Revision 1.7  2010/06/21 15:42:53  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.6  2004/10/20 21:01:41  dave
changes to gen parm

Revision 1.5  2004/02/20 20:21:51  roger
Must be @t_schema

Revision 1.4  2004/02/20 18:09:31  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.3  2003/09/08 16:31:12  roger
Enterprise was changed to 16 char length

Revision 1.2  2001/07/21 04:02:13  roger
Change MetaLinkAttribute to MetaLinkAttr
Change "opicm" to @t_schema in some

Revision 1.1  2001/03/21 21:33:50  roger
Changed GBL####A to GBL####

Revision 1.5  2001/03/17 04:47:11  roger
Misc clean up

Revision 1.4  2001/03/16 18:27:55  roger
Added branding feature to stored procedures

Revision 1.3  2001/03/16 03:38:59  roger
Added Log keyword

@desc=list of VE for a given EnityType
@fenced=true
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl2981.txt,v 1.7 2010/06/21 15:42:53 wendy Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE sp_cursor CURSOR FOR
SELECT DISTINCT
  ME.EntityType
, MD.LongDescription
, ML2.LinkValue

FROM @t_schema.MetaEntity ME

INNER JOIN @t_schema.MetaLinkAttr ML ON
ML.Enterprise = ME.Enterprise AND
ML.LinkType = 'Ventity/Entity' AND
ML.LinkType1 = ME.EntityType AND
ML.LinkType2 = :EntityType AND
ML.LinkCode = 'Start' AND
ML.ValFrom <= :ValOn AND :ValOn < ML.ValTo AND ML.EffFrom <= :ValOn AND :EffOn < ML.EffTo

INNER JOIN @t_schema.MetaLinkAttr ML2 ON
ML2.Enterprise = ME.Enterprise AND
ML2.LinkType = 'Role/Ventity' AND
ML2.LinkType1 = :RoleCode AND
ML2.LinkType2 = ME.EntityType AND
ML2.LinkCode = 'Capability' AND
ML2.ValFrom <= :ValOn AND :ValOn < ML2.ValTo AND ML2.EffFrom <= :EffOn AND :EffOn < ML2.EffTo

INNER JOIN @t_schema.MetaDescription MD ON
MD.Enterprise = ML2.Enterprise AND
MD.DescriptionType = ML2.LinkType2 AND
MD.DescriptionClass = 'Ventity' AND
MD.ValFrom <= :ValOn AND :ValOn < MD.ValTo AND MD.EffFrom <= :EffOn AND :EffOn < MD.EffTo

WHERE
ME.Enterprise = :Enterprise AND
ME.EntityClass = 'Ventity' AND
ME.ValFrom <= :ValOn AND :ValOn < ME.ValTo AND ME.EffFrom <= :EffOn AND :EffOn < ME.EffTo
;
@execute
EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in EntityType varchar(32)
in OPENID int
in ValOn varchar(26)
in EffOn varchar(26)
@end



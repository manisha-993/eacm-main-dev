@name=GBL8705
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative

$Log: gbl8705.txt,v $
Revision 1.6  2010/06/21 15:42:59  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.5  2004/10/20 21:01:49  dave
changes to gen parm

Revision 1.4  2004/02/20 20:21:58  roger
Must be @t_schema

Revision 1.3  2004/02/20 18:09:38  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.2  2003/09/08 16:31:22  roger
Enterprise was changed to 16 char length

Revision 1.1  2002/10/09 18:29:52  joan
add sp

Revision 1.1  2002/10/04 23:44:37  joan
initial load


@desc=Get All AVAILs that have matching ANNCODENAME, EFFECTIVEDATE, AVAILTYPE, GENAREANAMEINCL
@results=1
@parmstyle=GENERAL
@sql

EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl8705.txt,v 1.6 2010/06/21 15:42:59 wendy Exp $";
EXEC SQL END DECLARE SECTION;

EXEC SQL DECLARE sp_cursor CURSOR FOR
SELECT T1.entitytype, T1.entityid 
from @t_schema.text T1

inner join @t_schema.flag F1 on
F1.enterprise = :Enterprise and
F1.entitytype = T1.entitytype and
F1.entityid = T1.entityid and
F1.attributecode = 'ANNCODENAME' and
F1.attributevalue = :AnnCodeName and
F1.ValFrom <= :ValOn AND :ValOn < F1.ValTo AND F1.EffFrom <= :EffOn AND :EffOn < F1.EffTo

inner join @t_schema.flag F2 on
F2.enterprise = :Enterprise and
F2.entitytype = T1.entitytype and
F2.entityid = T1.entityid and
F2.attributecode = 'AVAILTYPE' and
F2.attributevalue = :AvailType and
F2.ValFrom <= :ValOn AND :ValOn < F2.ValTo AND F2.EffFrom <= :EffOn AND :EffOn < F2.EffTo

inner join @t_schema.flag F3 on
F3.enterprise = :Enterprise and
F3.entitytype = T1.entitytype and
F3.entityid = T1.entityid and
F3.attributecode = 'GENAREANAMEINCL' and
F3.attributevalue = :Geo and
F3.ValFrom <= :ValOn AND :ValOn < F3.ValTo AND F3.EffFrom <= :EffOn AND :EffOn < F3.EffTo

where T1.enterprise = :Enterprise and
T1.entitytype = 'AVAIL' and
T1.attributecode = 'EFFECTIVEDATE' and
T1.attributevalue = :EffDate and
T1.ValFrom <= :ValOn AND :ValOn < T1.ValTo AND T1.EffFrom <= :EffOn AND :EffOn < T1.EffTo
;
@execute
EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in AnnCodeName varchar(32)
in EffDate varchar(254)
in AvailType varchar(32)
in Geo varchar(32)
in OPENID int
in ValOn varchar(26)
in EffOn varchar(26)
@end



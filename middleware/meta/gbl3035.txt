@name=GBL3035
@noremote=true
@type=basic
@dbase=opicmpdh
@addperm=true
@narrative
$Log: gbl3035.txt,v $
Revision 1.23  2010/06/21 15:42:43  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.22  2004/10/20 21:01:42  dave
changes to gen parm

Revision 1.21  2004/02/20 20:21:52  roger
Must be @t_schema

Revision 1.20  2004/02/20 18:09:32  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.19  2003/09/08 16:31:13  roger
Enterprise was changed to 16 char length

Revision 1.18  2003/04/28 21:10:01  dave
more Entity/Role removal logic

Revision 1.17  2002/12/05 19:52:52  gregg
use MLA table for entityclass

Revision 1.16  2002/01/28 20:53:23  dave
merging 1.0 maint into 1.1

Revision 1.15  2001/10/10 17:57:25  dave
added 'X' to the mix

Revision 1.14  2001/07/27 00:36:11  roger
Add Log keyword and/or branding as needed

@desc=build a list of Attributes from MetaLinkAttr based upon enterprise, linktype='Attribute/Test', and linktype2='UNIQUE'
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE sp_cursor CURSOR FOR
SELECT
 MRA.ENTERPRISE
,ML.LINKTYPE1               as entity
,COALESCE(ISREL.LINKCODE,'Entity') as entity_class
,MD.LONGDESCRIPTION         as entity_long_desc
,MD.SHORTDESCRIPTION        as entity_st_desc
,MRA.LINKTYPE
,MRA.LINKTYPE1
,MRA.LINKTYPE2
,MRA.LINKCODE               as LINKCODE
,MRA.LINKVALUE              as LINKVALUE
,COALESCE(MA1.LONGDESCRIPTION, ' ') as Attribute_desc
,COALESCE(MA1.SHORTDESCRIPTION, ' ') as Attribute_stdesc
,COALESCE(MA2.LONGDESCRIPTION, ' ') as attribute_type_desc

FROM @t_schema.MetaLinkAttr MRA

INNER JOIN @t_schema.MetaLinkAttr ML on
ML.enterprise = MRA.Enterprise and
ML.linktype   ='Entity/Attribute' and
ML.linktype2  = MRA.LinkType1 and
ML.linkcode   = 'EntityAttribute' and
ML.ValFrom <= :ValOn AND :ValOn < ML.ValTo AND ML.EffFrom <= :EffOn AND :EffOn < ML.EffTo
INNER JOIN @t_schema.MetaLinkAttr MLAR ON
    MLAR.Enterprise = ML.Enterprise 
AND MLAR.LinkType = 'Role/Attribute'
AND MLAR.LinkType1 = :RoleCode
AND MLAR.LinkType2 = ML.Linktype2
AND MLAR.LinkCode = 'Capability'
AND MLAR.ValFrom <= :ValOn AND :ValOn < MLAR.ValTo AND MLAR.EffFrom <= :EffOn AND :EffOn < MLAR.EffTo

INNER JOIN @t_schema.MetaDescription MD ON
MD.Enterprise = MRA.Enterprise AND
MD.DescriptionType = ML.LinkType1 AND
MD.Descriptionclass in ('Entity', 'Relator') AND
MD.NLSID in (1, :NLSID) AND
MD.ValFrom <= :ValOn AND :ValOn  < MD.ValTo AND MD.EffFrom <= :EffOn AND :EffOn < MD.EffTo

LEFT JOIN @t_schema.METALINKATTR ISREL ON
    ISREL.enterprise = :Enterprise 
AND ISREL.linkType = MD.DescriptionType
AND ISREL.valto > :ValOn 
AND ISREL.valfrom <= :ValOn 
AND ISREL.effto > :EffOn 
AND ISREL.efffrom <= :EffOn

INNER JOIN @t_schema.MetaDescription MA1 ON
MA1.Enterprise = MRA.Enterprise AND
-- DO NOT Pick 'A' TYPE
MA1.DescriptionClass in ('B','D','F','I','L','X','P','S','T','U') AND
MA1.DescriptionType = MRA.LinkType1 AND
MA1.NLSID in (1, :NLSID) AND
MA1.ValFrom <= :ValOn AND :ValOn < MA1.ValTo AND MA1.EffFrom <= :EffOn AND :EffOn < MA1.EffTo

LEFT JOIN @t_schema.MetaDescription MA2 ON
MA2.Enterprise = 'NE' AND
MA2.DescriptionType = MA1.DescriptionClass AND
MA2.DescriptionClass = 'AttType'  AND
MA2.NLSID in (1, :NLSID) AND
MA2.ValFrom <= :ValOn AND :ValOn < MA2.ValTo AND MA2.EffFrom <= :EffOn AND :EffOn < MA2.EffTo


WHERE
MRA.Enterprise = :Enterprise
AND MRA.LinkType = :LinkType
AND MRA.linkType2 = :LinkType2
AND MRA.Valfrom <= :ValOn AND :ValOn < MRA.ValTo
AND MRA.EffFrom <= :EffOn AND :EffOn < MRA.EffTo
ORDER BY
 LINKVALUE
 ,entity_long_desc
 ,Attribute_desc
 ;
@execute
EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in LinkType varchar(32)
in LinkType2 varchar(32)
in OPENID int
in NLSID int
in ValOn varchar(26)
in EffOn varchar(26)
@end



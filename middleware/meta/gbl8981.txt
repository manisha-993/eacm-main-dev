@name=GBL8981
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative

Manages the update of an ProdStruct Record

// $Log: gbl8981.txt,v $
// Revision 1.26  2012/11/07 21:46:07  praveen
// Change column length for oslevel_fc to 1610
//
// Revision 1.25  2011/07/15 20:00:52  praveen
// Increase column length for OSLEVEL
//
// Revision 1.24  2010/06/21 15:43:15  wendy
// Exceeded RMI 64k static block limit, not needed for RMI
//
// Revision 1.23  2009/10/20 00:22:01  rick
// update to change long datatype to sqlint32
//
// Revision 1.22  2008/05/09 05:06:32  yang
// CONFIGURATORFLAG update
//
// Revision 1.2  2008/05/09 04:24:25  yang
// *** empty log message ***
//
// Revision 1.1.1.1  2007/10/17 13:35:48  jingb
// no message
//
// Revision 1.1.1.1  2007/10/10 11:06:01  sulin
// no message
//
// Revision 1.1  2007/10/10 03:28:07  sulin
// no message
//
// Revision 1.21  2007/05/31 15:34:40  rick
// increase length of oslevel and oslevel_fc
//
// Revision 1.20  2006/10/30 17:21:44  gregg
// rem projcdnam
//
// Revision 1.19  2006/10/26 20:02:47  gregg
// projcdnam,projcdnam_fc
//
// Revision 1.18  2006/09/28 18:21:29  gregg
// adding configuratorflag_fc
//
// Revision 1.17  2006/06/06 01:25:58  dave
// redressing widths
//
// Revision 1.16  2006/06/05 20:46:20  dave
// widening OSLevel
//
// Revision 1.15  2006/02/28 00:00:24  dave
// fixing primary key for counts
//
// Revision 1.14  2006/02/07 20:32:33  gregg
// extend oslevel column width to match table
//
// Revision 1.13  2005/09/12 05:43:15  dave
// fixed the sp
//
// Revision 1.12  2005/09/12 03:53:45  dave
// fixing sql parms
//
// Revision 1.11  2005/09/12 03:35:58  dave
// fixing prodstruct code so we can start testing IDL
//
// Revision 1.10  2005/06/07 05:28:41  dave
// more cleanup and NLSid ing
//
// Revision 1.9  2005/06/07 04:34:50  dave
// working on commit control
//
// Revision 1.8  2005/06/05 20:33:55  dave
// going for the Feature Update to the CatDB
//
// Revision 1.7  2005/06/05 03:01:13  dave
// no need to deal with forever in anndate
//
// Revision 1.6  2005/06/05 01:51:51  dave
// anndate fixes
//
// Revision 1.5  2005/06/05 01:40:05  dave
// more trickery
//
// Revision 1.4  2005/06/05 01:32:03  dave
// trying agin
//
// Revision 1.3  2005/06/05 01:25:30  dave
// some date rule is kicking in
//
// Revision 1.2  2005/06/05 00:18:47  dave
// first attempt at hooking up a ProdStruct Save
//
// Revision 1.1  2005/06/04 23:48:50  dave
// attempting to manage the put for prodstruct
//

@desc= Manages the update of an ProdStruct Record
@fenced=true
@results=0
@parmstyle=GENERAL
@sql

EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl8981.txt,v 1.26 2012/11/07 21:46:07 praveen Exp $";
sqlint32 count = 0;
EXEC SQL END DECLARE SECTION;
@execute

EXEC SQL

Select count(*) into :count
from gbli.prodstruct where
enterprise = :enterprise and
prodEntityType = :prodentitytype and
prodEntityID = :prodentityid and
featEntityType = :featentitytype and
featEntityID = :featentityid and
countrycode = :countrycode and
languagecode = :languagecode and
nlsid = :nlsid
;

if (count == 0 && isactive == 0) {
// do nothing
} else if (count == 0 && isactive == 1) {
// insert this guy
EXEC SQL
insert into gbli.prodstruct
(
enterprise,
countrycode,
languagecode,
nlsid,
prodentitytype,
prodentityid,
structentitytype,
structentityid,
featentitytype,
featentityid,
ordercode,
ordercode_fc,
oslevel,
oslevel_fc,
anndate,
withdrawdate,
pubfromdate,
pubtodate,
systemmax,
systemmin,
confqty,
status ,
status_fc,
configuratorflag_fc,
cfgflag,
cfgflag_fc,
valfrom,
valto,
isactive
)
values (
:enterprise,
:countrycode,
:languagecode,
:nlsid,
:prodentitytype,
:prodentityid,
:structentitytype,
:structentityid,
:featentitytype,
:featentityid,
:ordercode  ,
:ordercode_fc,
:oslevel  ,
:oslevel_fc,
case WHEN :anndayte = 'NULL' THEN NULL ELSE :anndayte END,
case WHEN :withdrawdayte = 'NULL' THEN NULL ELSE :withdrawdayte END,
case WHEN :pubfrom = 'NULL' THEN NULL ELSE :pubfrom END,
case WHEN :pubto = 'NULL' THEN NULL ELSE :pubto END,
:systemmax  ,
:systemmin  ,
:confqty  ,
:status  ,
:status_fc,
:configuratorflag_fc,
:cfgflag,
:cfgflag_fc,
current timestamp,
'9999-12-31-00.00.00.000000',
1
);
} else if (count != 0 && isactive == 1) {
// update this guy
EXEC SQL
update gbli.prodstruct
set
structentitytype = :structentitytype,
structentityid = :structentityid,
featentitytype = :featentitytype,
featentityid = :featentityid,
ordercode  = :ordercode  ,
ordercode_fc  = :ordercode_fc,
oslevel  = :oslevel  ,
oslevel_fc  = :oslevel_fc,
anndate  = (case WHEN :anndayte = 'NULL' THEN NULL ELSE :anndayte END) ,
withdrawdate  = (case when :withdrawdayte = 'NULL' THEN NULL ELSE :withdrawdayte END),
pubfromdate  = (case WHEN :pubfrom = 'NULL' THEN NULL ELSE :pubfrom END) ,
pubtodate  = (case when :pubto = 'NULL' THEN NULL ELSE :pubto END),
systemmax  = :systemmax  ,
systemmin  = :systemmin  ,
confqty  = :confqty ,
status  = :status  ,
status_fc  = :status_fc,
configuratorflag_fc = :configuratorflag_fc,
cfgflag = :cfgflag,
cfgflag_fc = :cfgflag_fc,
valfrom = current timestamp,
valto = '9999-12-31-00.00.00.000000',
isactive = 1
where
enterprise = :enterprise and
prodentitytype = :prodentitytype and
prodentityid = :prodentityid and
featentitytype = :featentitytype and
featentityid = :featentityid and
nlsid = :nlsid
;
} else {
// turn it off
EXEC SQL
update gbli.prodstruct
set
valfrom = current timestamp,
valto  =  current timestamp,
isactive = 0
where
enterprise = :enterprise and
prodentitytype = :prodentitytype and
prodentityid = :prodentityid and
featentitytype = :featentitytype and
featentityid = :featentityid and
nlsid = :nlsid
;
}

//EXEC SQL COMMIT WORK;

@parameters
inout ReturnStatus int
in enterprise varchar(8)
in countrycode varchar(2)
in languagecode varchar(2)
in nlsid int
in prodentitytype varchar(32)
in prodentityid int
in structentitytype varchar(32)
in structentityid int
in featentitytype varchar(32)
in featentityid int
in ordercode varchar(25)
in ordercode_fc varchar(8)
in oslevel varchar(13400)
in oslevel_fc varchar(1610)
in anndayte varchar(12)
in withdrawdayte varchar(12)
in pubfrom varchar(12)
in pubto varchar(12)
in systemmax int
in systemmin int
in confqty int
in status varchar(15)
in status_fc varchar(8)
in configuratorflag_fc varchar(8)
in cfgflag varchar(8)
in cfgflag_fc varchar(8)
in isactive int
@end


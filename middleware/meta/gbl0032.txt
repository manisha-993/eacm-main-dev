@name=GBL0032
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative
--------------------------------------------------------------------------------------------
-- World Wide Part Number Checking
-- This guy will tell you if an existing partnumber is currently present for the given
-- Attribute code.  It always checks as of Now.. it is impervious to historical information
-- It only looks at active records
-- It will not report one if it already exists for the entitytype,entityid candidate
-- being passed
-- Flag version
--------------------------------------------------------------------------------------------
$Log: gbl0032.txt,v $
Revision 1.3  2010/06/21 15:43:09  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.2  2006/09/26 19:15:15  gregg
fix name

Revision 1.1  2006/09/26 18:26:46  gregg
new for flag level1/level2 unique checks


@desc=World Wide Part Number Checking
@fenced=true
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl0032.txt,v 1.3 2010/06/21 15:43:09 wendy Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE sp_cursor CURSOR FOR
SELECT COUNT(*) FROM
@t_schema.Flag F
INNER JOIN @t_schema.Entity E ON
E.Enterprise = :Enterprise
AND E.EntityType = F.EntityType
AND E.EntityID = F.EntityID
AND E.ValFrom <= :now AND :now < E.ValTo AND E.EffFrom <= :now AND :now < E.EffTo
WHERE
F.Enterprise =  :Enterprise
AND F.AttributeCode IN 
  (SELECT LinkType1 FROM @t_schema.MetaLinkAttr 
   WHERE
       Enterprise = :Enterprise
   AND LinkType = 'Attribute/Test'
   AND LinkType2 = 'UNIQUE'
   AND LinkCode = 'LEVEL1'
   AND LinkValue = :UniqueType
   AND ValFrom <= :now and :now < ValTo AND EffFrom <= :now and :now < EffTo) 
AND F.AttributeValue = :AttributeValue
AND (F.EntityType <> :EntityType OR F.EntityID <>  :EntityID )
AND F.Valto = :forever
AND F.EffFrom <= :now  AND :now < F.EffTo
;
@execute
EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in EntityType varchar(32)
in EntityID int
in UniqueType varchar(32)
in AttributeValue varchar(254)
@end



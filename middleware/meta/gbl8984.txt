@name=GBL8984
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative

Manages the update of an Feature Detail Record

// $Log: gbl8984.txt,v $
// Revision 1.11  2010/06/21 15:43:01  wendy
// Exceeded RMI 64k static block limit, not needed for RMI
//
// Revision 1.10  2009/10/20 00:22:01  rick
// update to change long datatype to sqlint32
//
// Revision 1.9  2007/05/07 15:14:55  chris
// rolled back to 1.7
//
// Revision 1.7  2006/08/03 18:09:41  gregg
// more nlsid in where clause for updates/deactivates
//
// Revision 1.6  2006/02/28 00:00:24  dave
// fixing primary key for counts
//
// Revision 1.5  2006/02/22 00:35:39  gregg
// nlsid in count query
//
// Revision 1.4  2005/09/13 20:59:00  joan
// change for column
//
// Revision 1.3  2005/06/23 21:20:45  joan
// adjust for countrylist
//
// Revision 1.2  2005/06/20 18:14:06  joan
// fixes
//
// Revision 1.1  2005/06/15 21:34:06  joan
// intial load
//

@desc= Manages the update of an Feature Detail Record
@fenced=true
@results=0
@parmstyle=GENERAL
@sql

EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl8984.txt,v 1.11 2010/06/21 15:43:01 wendy Exp $";
sqlint32 count = 0;
EXEC SQL END DECLARE SECTION;
@execute

FILE *t;
mode_t Mode2;
Mode2 = 0777;
chmod("/tmp/8980.log",Mode2);
t=fopen("/tmp/8980.log","a");
t=fopen("/tmp/8980.log","w");
fprintf(t,"-->start of stored procedure GBL8980\n");

fprintf(t,"isactive:%d\n",isactive);

EXEC SQL

Select count(*) into :count
from gbli.featuredetail
where
enterprise = :enterprise and
featEntityType = :featentitytype and
featEntityID = :featentityid and
itemEntityType = :itementitytype and
itemEntityID = :itementityid and
attcode = :attcode and
countrycode = :countrycode and
languagecode = :languagecode and
nlsid = :nlsid
;

if (count == 0 && isactive == 0) {
// do nothing
fprintf(t,"count == 0 && isactive == 0\n");
} else if (count == 0 && isactive == 1) {
// insert this guy
fprintf(t,"count == 0 && isactive == 1\n");
EXEC SQL
insert into gbli.featuredetail
(
  enterprise
, countrycode
, languagecode
, nlsid
, countrylist
, featentitytype
, featentityid
, itementitytype
, itementityid
, attcode
, externalattcode
, attvalue
, attunitofmeasure
, isderived
, valfrom
, valto
, isactive
)
values (
  :enterprise
, :countrycode
, :languagecode
, :nlsid
, :countrylist
, :featentitytype
, :featentityid
, :itementitytype
, :itementityid
, :attcode
, :externalattcode
, :attvalue
, :attunitofmeasure
, :isderived
, current timestamp
, :forever
, 1
)
;
} else if (count != 0 && isactive == 1) {
// update this guy
fprintf(t,"count != 0 && isactive == 1\n");
EXEC SQL
update gbli.featuredetail
set
  externalattcode  = :externalattcode
, attvalue  = :attvalue
, isderived = :isderived
, valfrom = current timestamp
, valto = :forever
, isactive = 1
where
enterprise = :enterprise and
featEntityType = :featentitytype and
featEntityID = :featentityid and
itemEntityType = :itementitytype and
itemEntityID = :itementityid and
countrylist = :countrylist and
attcode = :attcode and
nlsid = :nlsid
;

} else {
// turn it off
fprintf(t,"else...\n");
EXEC SQL
update gbli.featuredetail
set
valfrom = current timestamp,
valto  =  current timestamp,
isactive = 0
where
enterprise = :enterprise and
featEntityType = :featentitytype and
featEntityID = :featentityid and
itemEntityType = :itementitytype and
itemEntityID = :itementityid and
countrylist = :countrylist and
attcode = :attcode and
nlsid = :nlsid
;

}

 fprintf(t,"end of GBL8980\n");
fclose(t);

//EXEC SQL COMMIT WORK;

@parameters
inout ReturnStatus int
in enterprise varchar(8)
in countrycode varchar(2)
in languagecode varchar(2)
in nlsid int
in countrylist varchar(8)
in featentitytype varchar(32)
in featentityid int
in itementitytype varchar(32)
in itementityid int
in attcode varchar(32)
in externalattcode varchar(32)
in attvalue varchar(254)
in attunitofmeasure varchar(25)
in isderived int
in isactive int
@end


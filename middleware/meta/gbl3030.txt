@name=GBL3030
@type=basic
@noremote=true
@dbase=opicmpdh
@addperm=true
@fenced=true
@narrative
$Log: gbl3030.txt,v $
Revision 1.25  2010/06/21 15:43:24  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.24  2004/10/20 21:01:42  dave
changes to gen parm

Revision 1.23  2004/02/20 20:21:52  roger
Must be @t_schema

Revision 1.22  2004/02/20 18:09:32  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.21  2003/09/08 16:31:13  roger
Enterprise was changed to 16 char length

Revision 1.20  2003/04/28 21:10:01  dave
more Entity/Role removal logic

Revision 1.19  2002/01/28 20:53:22  dave
merging 1.0 maint into 1.1

Revision 1.18  2001/07/27 00:36:11  roger
Add Log keyword and/or branding as needed

@desc=build a list of Attributes from MetaLinkAttr based upon enterprise, linktype, linkcode
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl3030.txt,v 1.25 2010/06/21 15:43:24 wendy Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE NavCur CURSOR FOR
SELECT
COALESCE(MDA.LONGDESCRIPTION, ' ') AS EntityDescription
,MDA.DESCRIPTIONTYPE
,COALESCE(MA.LONGDESCRIPTION, ' ') AS AttributeDescription
,MA.DESCRIPTIONTYPE
,MRA.LINKCODE
,MRA.LINKVALUE
,MRA.ENTERPRISE
FROM @t_schema.MetaLinkAttr MRA
INNER JOIN @t_schema.MetaLinkAttr MRA2 ON
MRA2.Enterprise = :Enterprise AND
MRA2.Linktype = 'Entity/Attribute'  AND
MRA2.Linktype2 = MRA.Linktype2  AND
MRA2.Linkcode = 'EntityAttribute'  AND
MRA2.ValFrom <= :ValOn AND :ValOn < MRA2.ValTo AND MRA2.EffFrom <= :EffOn AND :EffOn < MRA2.EffTo
INNER JOIN @t_schema.MetaLinkAttr MLAR ON
    MLAR.Enterprise = MRA2.Enterprise 
AND MLAR.LinkType = 'Role/Attribute'
AND MLAR.LinkType1 = :RoleCode
AND MLAR.LinkType2 = MRA2.Linktype2
AND MLAR.LinkCode = 'Capability'
AND MLAR.ValFrom <= :ValOn AND :ValOn < MLAR.ValTo AND MLAR.EffFrom <= :EffOn AND :EffOn < MLAR.EffTo

INNER JOIN @t_schema.MetaDescription MA ON
MA.Enterprise = :Enterprise AND
MA.DescriptionType = MRA.LinkType2 AND
MA.DescriptionClass > '9999'  AND
MA.NLSID = 1 AND
MA.ValFrom <= :ValOn AND :ValOn < MA.ValTo AND MA.EffFrom <= :EffOn AND :EffOn < MA.EffTo
INNER JOIN @t_schema.MetaDescription MDA ON
MDA.Enterprise = :Enterprise AND
MDA.DescriptionType = MRA2.LinkType1 AND
MDA.DescriptionClass >'9999' AND
MDA.NLSID = 1 AND
MDA.ValFrom <= :ValOn AND :ValOn < MDA.ValTo AND MDA.EffFrom <= :EffOn AND :EffOn < MDA.EffTo
WHERE
    MRA.Enterprise = :Enterprise
AND MRA.LinkType = :LinkType
AND MRA.LinkCode = :LinkCode
AND MRA.Valfrom <= :ValOn AND :ValOn < MRA.ValTo AND MRA.EffFrom <= :EffOn AND :EffOn < MRA.EffTo
ORDER BY
 EntityDescription
,AttributeDescription
;
@execute
EXEC SQL OPEN NavCur;
@parameters
inout ReturnStatus int
in OPENID int
in Enterprise varchar(16)
in LinkType varchar(32)
in LinkCode varchar(32)
in ValOn varchar(26)
in EffOn varchar(26)
@end



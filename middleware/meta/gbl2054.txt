@name=GBL2054
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative
----------------------------------------------------------------------
--  This guy replaces WHY2054
----------------------------------------------------------------------
$Log: gbl2054.txt,v $
Revision 1.9  2010/06/21 15:43:10  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.8  2004/10/29 17:36:55  dave
attempting to block move data for relator grabber

Revision 1.7  2004/10/20 21:01:38  dave
changes to gen parm

Revision 1.6  2004/08/18 17:25:03  joan
work on search

Revision 1.5  2004/02/20 20:21:48  roger
Must be @t_schema

Revision 1.4  2004/02/20 18:09:29  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.3  2003/09/08 16:31:10  roger
Enterprise was changed to 16 char length

Revision 1.2  2002/10/04 23:43:55  joan
add HWPDG

Revision 1.1  2001/03/21 21:33:49  roger
Changed GBL####A to GBL####

Revision 1.3  2001/03/16 18:27:50  roger
Added branding feature to stored procedures

Revision 1.2  2001/03/16 03:38:56  roger
Added Log keyword

@desc=Return all entity ids for low order entities related to the passed entity through the relatortype for the given Enterprise.
@fenced=true
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl2054.txt,v 1.9 2010/06/21 15:43:10 wendy Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE sp_cursor CURSOR FOR
SELECT DISTINCT
  R.Entity2ID AS EntityID
, E.ValFrom
, E.ValTo
, R.Entity2Type AS EntityType
, R.EntityID AS RelatorID
FROM @t_schema.Relator R
INNER JOIN @t_schema.Entity E ON
E.Enterprise = :Enterprise AND
E.EntityType = R.Entity2Type AND
E.EntityID = R.Entity2ID AND
E.ValFrom <= :ValOn AND :ValOn < E.ValTo AND E.EffFrom <= :EffOn AND :EffOn < E.EffTo
WHERE
R.Enterprise = :Enterprise AND
R.EntityType = :RelatorType AND
R.Entity1Type = :Entity1Type AND
R.Entity1ID = :Entity1ID AND
R.ValFrom <= :ValOn AND :ValOn < R.ValTo AND R.EffFrom <= :EffOn AND :EffOn < R.EffTo
ORDER BY R.Entity2ID
;
@execute
EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in OPENID int
in Enterprise varchar(16)
in RelatorType varchar(32)
in Entity1Type varchar(32)
in Entity1ID int
in ValOn varchar(26)
in EffOn varchar(26)
@end



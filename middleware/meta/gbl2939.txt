@name=GBL2939
@noremote=true
@type=basic
@dbase=opicmpdh
@addperm=true
@narrative
---------------------------------------------------------------------------------------------
--  This replaces WHY2939
--
--  Used in The Admin Meta Reports Section
--
---------------------------------------------------------------------------------------------
$Log: gbl2939.txt,v $
Revision 1.14  2010/06/21 15:43:25  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.13  2004/10/20 21:01:40  dave
changes to gen parm

Revision 1.12  2004/02/20 20:21:50  roger
Must be @t_schema

Revision 1.11  2004/02/20 18:09:31  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.10  2003/04/28 21:10:00  dave
more Entity/Role removal logic

Revision 1.9  2002/12/05 18:48:10  gregg
get entityclass from MLA table

Revision 1.8  2002/07/30 17:18:48  dave
Added Back used SP's

Revision 1.6  2002/01/28 20:53:20  dave
merging 1.0 maint into 1.1

Revision 1.5  2001/07/21 04:02:12  roger
Change MetaLinkAttribute to MetaLinkAttr
Change "opicm" to @t_schema in some

Revision 1.4  2001/03/16 18:27:53  roger
Added branding feature to stored procedures

Revision 1.3  2001/03/16 03:38:58  roger
Added Log keyword

@desc=NewMetaGetEntityNRelatorRole
@fenced=true
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl2939.txt,v 1.14 2010/06/21 15:43:25 wendy Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE sp_cursor CURSOR FOR
SELECT
  MD.Enterprise
, MD.DescriptionType
, COALESCE(ISREL.LINKCODE,'Entity')
, MD.NLSID
, MD.ShortDescription
, MDR.DescriptionType
, MDR.DescriptionClass
, MDR.NLSID
, MDR.ShortDescription
, (SELECT ShortDescription
FROM @t_schema.MetaDescription MERRAD
WHERE

MERRAD.Enterprise = 'NE' AND
MERRAD.DescriptionClass = 'CapCode' AND
MERRAD.DescriptionType = MERRA.LinkValue AND
MERRAD.ValFrom <= :ValOn AND :ValOn < MERRAD.ValTo AND MERRAD.EffFrom <= :EffOn AND :EffOn < MERRAD.EffTo

) AS Capability
FROM @t_schema.MetaEntity MR
INNER JOIN @t_schema.MetaDescription MD ON
MD.Enterprise = MRE.Enterprise AND
MD.NLSID IN (1,:NLSID) AND
MD.DescriptionType = MRE.LinkType2 AND
MD.DescriptionClass IN ('Entity','Relator') AND
MD.ValFrom <= :ValOn AND :ValOn < MD.ValTo AND MD.EffFrom <= :EffOn AND :EffOn < MD.EffTo

LEFT JOIN @t_schema.METALINKATTR ISREL ON
    ISREL.enterprise = :Enterprise 
AND ISREL.linkType = MD.DescriptionType
AND ISREL.valto > :ValOn 
AND ISREL.valfrom <= :ValOn 
AND ISREL.effto > :EffOn 
AND ISREL.efffrom <= :EffOn

INNER JOIN @t_schema.MetaDescription MDR ON
MDR.Enterprise = MERR.Enterprise AND
MDR.DescriptionType = MERR.LinkType1 AND
MDR.DescriptionClass = 'Role' AND
MDR.NLSID IN (1,:NLSID) AND
MDR.ValFrom <= :ValOn AND :ValOn < MDR.ValTo AND MDR.EffFrom <= :EffOn AND :EffOn < MDR.EffTo

WHERE
MR.Enterprise = :Enterprise AND
MR.EntityClass = 'Role' AND
MR.EntityType = :RoleCode AND
MR.ValFrom <= :ValOn AND :ValOn < MR.ValTo AND MR.EffFrom <= :EffOn AND :EffOn < MR.EffTo

ORDER BY
MDR.DescriptionType
;
@execute
EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in LinkType2 varchar(32)
in OPENID int
in NLSID int
in ValOn varchar(26)
in EffOn varchar(26)
@end



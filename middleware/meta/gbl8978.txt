@name=GBL8978
@noremote=true
@type=basic
@dbase=opicmpdh
@t_schema=BIGCAT
@narrative

Manages the update of an Market info record

// $Log: gbl8978.txt,v $
// Revision 1.13  2010/06/21 15:43:18  wendy
// Exceeded RMI 64k static block limit, not needed for RMI
//
// Revision 1.12  2009/10/20 00:22:01  rick
// update to change long datatype to sqlint32
//
// Revision 1.11  2009/02/25 14:53:54  rick
// change to not set inactive and update timestamp unless active to start with.
//
// Revision 1.10  2006/03/14 22:59:54  bala
// change schema back to gbli
//
// Revision 1.9  2006/03/14 20:54:44  bala
// make schema a parm
//
// Revision 1.8  2006/02/28 00:00:24  dave
// fixing primary key for counts
//
// Revision 1.7  2006/02/22 00:34:09  gregg
// nlsid in count query
//
// Revision 1.6  2005/09/20 03:35:31  dave
// more sp Cleanup
//
// Revision 1.5  2005/09/20 03:32:56  dave
// fixing up the SP
//
// Revision 1.4  2005/06/22 19:28:20  dave
// ok.. trying to add countryList to the mix for my tables
//
// Revision 1.3  2005/06/10 21:31:34  dave
// ok.. lets make sure we have it all here
//
// Revision 1.2  2005/06/10 20:56:57  dave
// some syntax
//
// Revision 1.1  2005/06/10 20:36:18  dave
// new sp to store a basic marketing info
//
//

@desc= Manages the update of a basic Market Info Record
@fenced=true
@results=0
@parmstyle=GENERAL
@sql

EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl8978.txt,v 1.13 2010/06/21 15:43:18 wendy Exp $";
sqlint32 count = 0;
EXEC SQL END DECLARE SECTION;
@execute

EXEC SQL

Select count(*) into :count
from gbli.marketinfo
where
enterprise = :enterprise and
collEntityType = :collentitytype and
collEntityID = :collentityid and
countrycode = :countrycode and
languagecode = :languagecode and
nlsid = :nlsid
;

if (count == 0 && isactive == 0) {
// do nothing
} else if (count == 0 && isactive == 1) {
// insert this guy
EXEC SQL
insert into gbli.marketinfo
(
  enterprise
, countrycode
, languagecode
, nlsid
, countrylist
, collentitytype
, collentityid
, publishfrom
, publishto
, status
, status_fc
, valfrom
, valto
, isactive
)
values (
  :enterprise
, :countrycode
, :languagecode
, :nlsid
, :countrylist
, :collentitytype
, :collentityid
, case :publishfrom when 'NULL' then NULL else :publishfrom end
, case :publishto when 'NULL' then NULL else :publishto end
, :status
, :status_fc
, current timestamp
, :forever
, 1
)
;
} else if (count != 0 && isactive == 1) {
// update this guy
EXEC SQL
update gbli.marketinfo
set
  publishfrom = case :publishfrom when 'NULL' then NULL else :publishfrom end
, publishto = case :publishto when 'NULL' then NULL else :publishto end
, status = :status
, status_fc = :status_fc
, valfrom = current timestamp
, valto = :forever
, isactive = 1
where
enterprise = :enterprise and
collEntityType = :collentitytype and
collEntityID = :collentityid and
countrylist = :countrylist
;

} else {
// turn it off
EXEC SQL
update gbli.marketinfo
set
valfrom = current timestamp,
valto  =  current timestamp,
isactive = 0
where
enterprise = :enterprise and
collEntityType = :collentitytype and
collEntityID = :collentityid and
countrylist = :countrylist and 
isactive=1
;

}

//EXEC SQL COMMIT WORK;

@parameters
inout ReturnStatus int
in enterprise varchar(8)
in countrycode varchar(2)
in languagecode varchar(2)
in nlsid int
in countrylist varchar(8)
in collentitytype varchar(32)
in collentityid int
in publishfrom varchar(12)
in publishto varchar(12)
in status varchar(25)
in status_fc varchar(8)
in isactive int
@end


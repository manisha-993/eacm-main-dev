@name=GBL9006
@type=basic
@noremote=true
@dbase=opicmpdh

@narrative

Spawned from gbl9002.

Pulls all attributes for a given entitytype,entityid in the trsnavigate Table for a sessionid.

(differs from gbl9002 in that it pulls even attributes which are 'turned off'.)

Used for ODS engine

$Log: gbl9006.txt,v $
Revision 1.12  2010/06/21 15:43:10  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.11  2006/09/09 03:05:52  dave
minor fix for db2 7.9.. Can no longer RTRIM a Long VarChar

Revision 1.10  2004/10/20 21:01:50  dave
changes to gen parm

Revision 1.9  2004/09/14 22:31:40  dave
new change history stuff.. to include Change group in
addition to role information

Revision 1.8  2004/09/13 22:26:51  dave
more robust attribute pulling

Revision 1.7  2004/09/13 21:40:28  dave
change to stream line gbl9006

Revision 1.6  2004/07/20 14:18:18  dave
fixes brought forward from 1.2

Revision 1.5  2004/03/03 22:07:26  gregg
return empty string as opposed to NULL

Revision 1.4  2004/03/03 17:41:34  gregg
use WHEN T.EffTo > :EndTime THEN RTRIM(T.AttributeValue)

Revision 1.3  2004/03/03 17:39:31  gregg
remove restriction AND T.ValFrom >= :StartTime

Revision 1.2  2004/03/03 01:51:36  gregg
null out attributevalues based on whether change was AFTER START TIME

Revision 1.1  2004/03/03 01:17:12  gregg
initial load as GBL9006

Revision 1.5  2004/03/03 00:48:29  gregg
order by AttribtueCode, ValFrom

Revision 1.4  2004/03/03 00:34:48  gregg
changes for 'turned-off' attributes

Revision 1.3  2004/02/20 20:21:58  roger
Must be @t_schema

Revision 1.2  2004/02/20 18:09:38  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.1  2003/01/23 23:35:39  dave
ODS engine SP's


@desc=Pulls all attributes for a given entitytype,entityid in the trsnavigate Table for a sessionid
@fenced=true
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;

char brand[80] = "$Id: gbl9006.txt,v 1.12 2010/06/21 15:43:10 wendy Exp $";
EXEC SQL END DECLARE SECTION;


EXEC SQL DECLARE sp_cursor1 CURSOR FOR
--
-- TEXT ON
--
SELECT
 RTRIM(T.EntityType)  as EntityType
,T.EntityID  as EntityID
,RTRIM(T.AttributeCode) as AttributeCode
,T.NLSID as NLSID
,RTRIM(T.AttributeValue)
,T.ValFrom as ValFrom
,T.EffTo as EffTo
FROM opicm.trsNavigate N
INNER JOIN opicm.Text T ON
    T.Enterprise = :Enterprise
AND T.EntityType = N.EntityType
AND T.EntityID = N.EntityID
AND T.ValTo = :forever
AND T.EffTo >= :EndTime
WHERE
  N.SessionID = :SessionID
--
-- TEXT OFF
--
UNION ALL
SELECT
 RTRIM(T.EntityType)  as EntityType
,T.EntityID  as EntityID
,RTRIM(T.AttributeCode) as AttributeCode
,T.NLSID as NLSID
,''
,T.ValFrom as ValFrom
,T.EffTo as EffTo
FROM opicm.trsNavigate N
INNER JOIN opicm.Text T ON
    T.Enterprise = :Enterprise
AND T.EntityType = N.EntityType
AND T.EntityID = N.EntityID
AND T.ValTo = :forever
AND T.valfrom >= :StartTime
AND T.effTo < :EndTime
WHERE
  N.SessionID = :SessionID
--
-- FLAG ON
--
UNION ALL
SELECT
 RTRIM(F.EntityType)
,F.EntityID
,RTRIM(F.AttributeCode) as AttributeCode
,1
,RTRIM(F.AttributeValue)
,F.ValFrom as ValFrom
,F.EffTo
FROM opicm.trsNavigate N
INNER JOIN opicm.Flag F ON
    F.Enterprise = :Enterprise
AND F.EntityType = N.EntityType
AND F.EntityID = N.EntityID
AND F.ValTo = :forever
AND F.EffTo = :forever
WHERE
  N.SessionID = :SessionID
--
-- FLAG OFF
--
UNION ALL
SELECT Distinct
 RTRIM(F.EntityType)
,F.EntityID
,RTRIM(F.AttributeCode) as AttributeCode
,1
,''
,F.ValFrom
,:StartTime
FROM opicm.trsNavigate N
INNER JOIN opicm.Flag F ON
    F.Enterprise = :Enterprise
AND F.EntityType = N.EntityType
AND F.EntityID = N.EntityID
AND F.ValTo = :forever
AND F.ValFrom >= :StartTime
AND F.EffTo  < :EndTime
WHERE
  N.SessionID = :SessionID
--
-- LONG TEXT ON
--
UNION ALL
SELECT
 RTRIM(T.EntityType)
,T.EntityID
,RTRIM(T.AttributeCode) as AttributeCode
,T.NLSID
,T.AttributeValue
,T.ValFrom as ValFrom
,T.EffTo
FROM opicm.trsNavigate N
INNER JOIN opicm.LongText T ON
    T.Enterprise = :Enterprise
AND T.EntityType = N.EntityType
AND T.EntityID = N.EntityID
AND T.ValTo = :forever
AND T.EffTo >= :EndTime
WHERE
  N.SessionID = :SessionID
UNION ALL
SELECT
 RTRIM(T.EntityType)
,T.EntityID
,RTRIM(T.AttributeCode) as AttributeCode
,T.NLSID
,''
,T.ValFrom as ValFrom
,T.EffTo
FROM opicm.trsNavigate N
INNER JOIN opicm.LongText T ON
    T.Enterprise = :Enterprise
AND T.EntityType = N.EntityType
AND T.EntityID = N.EntityID
AND T.ValTo = :forever
AND T.ValFrom >= :StartTime
AND T.EffTo  < :EndTime
WHERE
  N.SessionID = :SessionID
UNION ALL
SELECT
 RTRIM(B.EntityType)
,B.EntityID
,RTRIM(B.AttributeCode) as AttributeCode
,B.NLSID
,RTRIM(B.BlobExtension)
,B.ValFrom as ValFrom
,B.EffTo
FROM opicm.trsNavigate N
INNER JOIN opicm.Blob B ON
    B.Enterprise = :Enterprise
AND B.EntityType = N.EntityType
AND B.EntityID = N.EntityID
AND B.ValTo = :forever
AND B.EffTo >= :EndTime
WHERE
  N.SessionID = :SessionID
UNION ALL
SELECT
 RTRIM(B.EntityType)
,B.EntityID
,RTRIM(B.AttributeCode) as AttributeCode
,B.NLSID
,''
,B.ValFrom as ValFrom
,B.EffTo
FROM opicm.trsNavigate N
INNER JOIN opicm.Blob B ON
    B.Enterprise = :Enterprise
AND B.EntityType = N.EntityType
AND B.EntityID = N.EntityID
AND B.ValTo = :forever
AND B.ValFrom >= :StartTime
AND B.EffTo  < :EndTime
WHERE
  N.SessionID = :SessionID
order by AttributeCode, ValFrom
FOR READ ONLY
;

@execute

//
// Pull the records here...
//

EXEC SQL OPEN sp_cursor1;

@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in SessionID int
in StartTime varchar(27)
in EndTime varchar(27)
@end

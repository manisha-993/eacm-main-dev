@name=GBL2930
@noremote=true
@type=basic
@dbase=opicmpdh
@narrative  checks for combo uniqueness
$Log: gbl2930.txt,v $
Revision 1.14  2010/06/21 15:43:08  wendy
Exceeded RMI 64k static block limit, not needed for RMI

Revision 1.13  2004/10/20 21:01:40  dave
changes to gen parm

Revision 1.12  2004/05/06 19:50:13  dave
sp speed updates

Revision 1.11  2004/02/20 20:21:49  roger
Must be @t_schema

Revision 1.10  2004/02/20 18:09:30  roger
ALL table names must now be prefixed w/ @t_schema in
order to support multiple schemas in SPs.

Revision 1.9  2003/10/20 22:57:35  dave
syntxx

Revision 1.8  2003/10/20 22:13:21  dave
more simplification

Revision 1.7  2003/10/20 22:12:49  dave
simplified

Revision 1.6  2003/08/07 22:36:33  dave
removing entitytype from check

Revision 1.5  2003/07/03 18:53:55  dave
fixing GBL2930

Revision 1.4  2003/07/02 23:00:47  dave
uniqueness check and sp removal

Revision 1.3  2003/07/02 21:41:21  dave
new sp for Combo Uniqueness Check

@desc=checks for combo uniqueness
@fenced=true
@results=1
@parmstyle=GENERAL
@sql
EXEC SQL BEGIN DECLARE SECTION;
char brand[80] = "$Id: gbl2930.txt,v 1.14 2010/06/21 15:43:08 wendy Exp $";
EXEC SQL END DECLARE SECTION;
EXEC SQL DECLARE sp_cursor CURSOR FOR
SELECT T.EntityID
FROM @t_schema.Text T
INNER JOIN @t_schema.Flag F ON
    F.Enterprise = :Enterprise
AND F.EntityType = T.EntityType
AND F.EntityID = T.EntityID
AND rtrim(F.AttributeCode)  = :FlagAttributeCode
AND F.AttributeValue in (:FlagAttributeValue)
AND F.ValFrom <= :now AND :now < F.ValTo AND F.EffFrom <= :now AND :now < F.EffTo
INNER JOIN @t_schema.Entity E ON
    E.Enterprise = :Enterprise
AND E.EntityType = T.EntityType
AND E.EntityID = T.EntityID
AND E.ValFrom <=  :now AND :now < E.ValTo AND E.EffFrom <= :now AND :now < E.EffTo
WHERE
    T.Enterprise =  :Enterprise
AND T.AttributeCode = :TextAttributeCode
AND T.AttributeValue = :TextAttributeValue
AND T.NLSID = 1
AND T.ValFrom <= :now  AND :now < T.ValTo AND T.EffFrom <= :now AND :now < T.EffTo
;

@execute
EXEC SQL OPEN sp_cursor;
@parameters
inout ReturnStatus int
in Enterprise varchar(16)
in FlagAttributeCode varchar(33)
in FlagAttributeValue varchar(33)
in TextAttributeCode varchar(33)
in TextAttributeValue varchar(33)
@end



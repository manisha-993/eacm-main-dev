#!/bin/sh
#
#db2 connect to pdh12 user opica12 using cat9tail
#db2 "alter tablespace tspace06 add(file '/db2/v12/pdh12/fsxx/tspace06.1' 500M)"
#db2 "alter tablespace ispace07 add(file '/db2/v12/pdh12/fsxx/ispace07.1' 500M)"
#db2 terminate
#crfs -v jfs -g'hdisk11vg' -a size='4000000' -m'/db2/v12/pdh12/fsxx' -A''`locale yesstr | awk -F: '{print $1}'`'' -p'rw' -t''`locale nostr | awk -F: '{print $1}'`'' -a frag='4096' -a nbpi='4096' -a ag='8'
#
#
# when building a new environment ...
#
# create instance of db2 call it opiciXX where XX is version (opici11)
# fenced user is opicfXX
# opicmadm admin is opicaXX
#su
#
#cat >> /etc/services << EOF
#opici12         50021/tcp   # Connection port for DB2 instance opici12
#opici12a        50022/tcp   # Interrupt  port for DB2 instance opici12
#EOF
#
#tail /etc/services
#
#/usr/lpp/db2_07_01/instance/db2icrt -p opici12 -u opicf12 opici12
#
#
#
#
# Script to generate script to build database (DB), tablespaces (TS) and the filesystems (FS) which contain them
#
# This script will output another script which is used to build DB, FS, TS
#
# 1. Change parms below as needed
# 2. Run script ./make.database >make.pdh
# 3. Make script make.pdh executable using chmod +x make.pdh
# 4. su 
# 5. Execute ./make.pdh (builds FS -- must be root)
# 6. exit out of su back to db instance owner
# 7. Execute ./make.pdh again (builds DB + TS -- must have permissions in DB2)
#
# Note: you may need to manually drop some filesystems
# Note: you should ensure the database does not already exist
# Note: this script doesn't DO IT ALL or protect you, you still need to be very careful!
# Note: for some reason (still unknown), I've had trouble with containers with size near 1024MB, use several smaller ones instead
#
#
# Temporary file to hold the FS+TS definitions (no need to change)
FS_DEFS="/tmp/fs.dat"

#
# Specifications for FS+TS *** change as needed ***
#
# format: filesystem# filesystem_size fs_on_volume_group tcontainer1_size icontainer1_size tcontainer2_size icontainer2_size, etc
# All sizes here are specified in MB
# Can only handle max of 6 data tablespaces plus 6 index tablespaces
#
# Example:
# 01 582 hdisk1vg 275 16 275 16
# Means filesystem 01 will be placed on volume group hdisk1vg (is physical drive hdisk1) and will contain (TSPACE01 and ISPACE01)
# TSPACE01 will have two containers of size 275MB
# ISPACE01 will have two containers each of size 16MB
#
# Note: DO NOT define any containers on fs00 (database, logs, tempspace, system catalog use this FS)
# Note: you must pair TSPACE containers with ISPACE containers (must be an even number of specifications)
#
cat > $FS_DEFS << EOF
00 2048 hdisk2vg
01 256 hdisk3vg 128 128 
02 1024 hdisk4vg 512 512
03 2048 hdisk5vg 512 512 512 512
04 4112 hdisk7vg 900 128 900 128 900 128 900 128
05 6168 hdisk8vg 900 128 900 128 900 128 900 128 900 128 900 128
06 8224 hdisk2vg 128 900 128 900 128 900 128 900 128 900 128 900 128 900 128 900
07 1024 hdisk3vg 128 128 128 128 128 128 128 128
08 5648 hdisk4vg 512 900 512 900 512 900 512 900
09 8224 hdisk5vg 900 128 900 128 900 128 900 128 900 128 900 128 900 128 900 128
10 4112 hdisk7vg 900 128 900 128 900 128 900 128
xx 4096 hdisk8vg
EOF

#
# *** change as needed ***
#
DBASE="pdh12"
DBASE_DIR="$DBASE/"
DB2_PAGESIZE="4096"

#
# Do not change these
#
DBASE_OWN_USER="opici12"
DBASE_OWN_GROUP="opici12g"
DATA_DIR="/db2/v12/"

#
# now we get down to business ...
#
echo "#!/bin/sh"
echo " "
echo "#"
echo "# DO NOT MODIFY THIS SCRIPT !"
echo "#"
echo "# It is generated by the make.database script"
echo "#"
echo " "
echo echo "RECREATING FILESYSTEMS ..."
cat $FS_DEFS |
while read FS FSS VG C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C12 C13 C14 C15 C16 C17 C18 C19 C20
  do
  echo echo "  RECREATING FILESYSTEM fs$FS ..."
  echo echo "    "unmount old filesystem
  echo umount $DATA_DIR$DBASE_DIR"fs"$FS
  echo echo "    "remove old filesystem
  echo rmfs $DATA_DIR$DBASE_DIR"fs"$FS
  echo echo "    "create new filesystem
  echo "crfs -v jfs -g'"$VG"' -a size='"`expr $FSS \* 2237`"' -m'"$DATA_DIR$DBASE_DIR"fs"$FS"' -A''`locale yesstr | awk -F: '{print $1}'`'' -p'rw' -t''`locale nostr | awk -F: '{print $1}'`'' -a frag='4096' -a nbpi='4096' -a ag='8'"
  echo echo "    "mount new filesystem
  echo mount $DATA_DIR$DBASE_DIR"fs"$FS
  done

echo "chown -R $DBASE_OWN_USER.$DBASE_OWN_GROUP $DATA_DIR$DBASE_DIR"
echo "chmod -R 775 $DATA_DIR$DBASE_DIR"

echo echo "UNCATALOGING DATABASE "$DBASE
echo "db2 UNCATALOG DATABASE "$DBASE

# build as a unicode database
echo echo "BUILDING DATABASE "$DBASE
echo "db2 CREATE DATABASE "$DBASE" ON "$DATA_DIR$DBASE_DIR"fs00 USING CODESET UTF-8 TERRITORY US"

echo "db2 connect to "$DBASE

echo echo "CREATING TABLE TABLESPACES ..."
cat $FS_DEFS |
while read FS FSS VG C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C12 C13 C14 C15 C16 C17 C18 C19 C20
  do
  SP="  "
  if [ "" -ne "$C1" ]; then
    echo echo "  CREATING TABLESPACE tspace$FS"
    echo "db2 \"create tablespace tspace$FS PAGESIZE $DB2_PAGESIZE managed by database using ( \\"
  fi
  if [ "" -ne "$C1" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/tspace"$FS".1' "$C1"M \\"
    SP=", "
  fi
  if [ "" -ne "$C3" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/tspace"$FS".2' "$C3"M \\"
    SP=", "
  fi
  if [ "" -ne "$C5" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/tspace"$FS".3' "$C5"M \\"
    SP=", "
  fi
  if [ "" -ne "$C7" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/tspace"$FS".4' "$C7"M \\"
    SP=", "
  fi
  if [ "" -ne "$C9" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/tspace"$FS".5' "$C9"M \\"
    SP=", "
  fi
  if [ "" -ne "$C11" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/tspace"$FS".6' "$C11"M \\"
    SP=", "
  fi
  if [ "" -ne "$C13" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/tspace"$FS".7' "$C13"M \\"
    SP=", "
  fi
  if [ "" -ne "$C15" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/tspace"$FS".8' "$C15"M \\"
    SP=", "
  fi
  if [ "" -ne "$C17" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/tspace"$FS".9' "$C17"M \\"
    SP=", "
  fi
  if [ "" -ne "$C19" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/tspace"$FS".10' "$C19"M \\"
    SP=", "
  fi
  if [ "" -ne "$C1" ]; then
    echo ")\""
  fi
  done

echo echo "CREATING INDEX TABLESPACES ..."
cat $FS_DEFS |
while read FS FSS VG C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C12 C13 C14 C15 C16 C17 C18 C19 C20
  do
  SP="  "
  if [ "" -ne "$C2" ]; then
    echo echo "  CREATING TABLESPACE ispace$FS"
    echo "db2 \"create tablespace ispace$FS managed by database using ( \\"
  fi
  if [ "" -ne "$C2" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/ispace"$FS".1' "$C2"M \\"
    SP=", "
  fi
  if [ "" -ne "$C4" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/ispace"$FS".2' "$C4"M \\"
    SP=", "
  fi
  if [ "" -ne "$C6" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/ispace"$FS".3' "$C6"M \\"
    SP=", "
  fi
  if [ "" -ne "$C8" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/ispace"$FS".4' "$C8"M \\"
    SP=", "
  fi
  if [ "" -ne "$C10" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/ispace"$FS".5' "$C10"M \\"
    SP=", "
  fi
  if [ "" -ne "$C12" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/ispace"$FS".6' "$C12"M \\"
    SP=", "
  fi
  if [ "" -ne "$C14" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/ispace"$FS".7' "$C14"M \\"
    SP=", "
  fi
  if [ "" -ne "$C16" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/ispace"$FS".8' "$C16"M \\"
    SP=", "
  fi
  if [ "" -ne "$C18" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/ispace"$FS".9' "$C18"M \\"
    SP=", "
  fi
  if [ "" -ne "$C20" ]; then
    echo "$SP""file '"$DATA_DIR$DBASE_DIR"fs"$FS"/ispace"$FS".10' "$C20"M \\"
    SP=", "
  fi
  if [ "" -ne "$C2" ]; then
    echo ")\""
  fi
  done

echo "db2 terminate"

rm $FS_DEFS

